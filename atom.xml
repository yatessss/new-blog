<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yatessss</title>
  <subtitle>记录的地方</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.yatessss.com/"/>
  <updated>2017-01-12T15:43:15.000Z</updated>
  <id>http://www.yatessss.com/</id>
  
  <author>
    <name>yatessss</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我想到的</title>
    <link href="http://www.yatessss.com/2017/01/10/%E6%88%91%E6%83%B3%E5%88%B0%E7%9A%84.html"/>
    <id>http://www.yatessss.com/2017/01/10/我想到的.html</id>
    <published>2017-01-09T16:00:00.000Z</published>
    <updated>2017-01-12T15:43:15.000Z</updated>
    
    <content type="html">&lt;p&gt;从什么时候开始我们迷失了自己？&lt;/p&gt;
&lt;p&gt;一年半之前 当初自己没有选择回家去向父母希望的考一个公务员  或者找一个稳定的工作 因为我不想这么一辈子就这么过去  毕了业之后就过着一种从二十岁就看到五十岁的生活  每天都重复重复的生活  梭罗说过一句话：大多数人生活在平静的绝望之中  我想我不要当这个大多数人  我想了解更多  学习更多  然后去实现更多  所以我选择留在北京 因为北京对职业上的发展要比家乡好很多  而一开始我也在从事哪种职业上面做出了自己的选择  而现在我对目前的工作比较欣慰  因为我从中学到了很多 学到让我感觉踏实  而不是浑浑噩噩的度过了 &lt;/p&gt;
&lt;p&gt;一年半过去了  我从一个新手变成了一个熟手  我可以独立完成工作了  但我是不是就应该满足于此了呢  朝着这条路一直走下去  就像《一个人的朝圣》当中的主人公哈罗德  在啤酒厂干了40年的业务员 生活平淡无奇  到最后决定上路看他朋友的时候 他60岁 他到那个时候才领略到路上的风光  这个故事万幸而又不幸  庆幸他最后还是领略到了 但是不幸的是他知道的却又太晚了 留给他的时间也变少了 大多数人包括我在内可能都在此之列  当懂得了大多数道理的时候 却因为力不从心而愤愤不平 &lt;/p&gt;
&lt;p&gt;我不希望做另一个哈罗德  我不希望等到我都快走不动路的时候 才知道原来生活可以这样 可以那样  像《每周工作四小时》里所说的 我们不应该把所有的计划都留在退休之后  而是应该有一个阶段性的目标来完成一件事  总是紧绷着生活的或者会让人力竭  我们应当是在一段时间内  全力冲刺  等力气用光了就暂时原地休息积蓄下次爆发时的能量  人总会有心理生理上的高峰低谷  在高峰的时候我们就全力向前  在低谷的时候我们就积蓄能量  这样的生活我想才是应该有的状态  &lt;/p&gt;
&lt;p&gt;所以 是不是能在我顾虑不多的时候  多注意一下路边的风景而不是仅仅是埋头向前呢？  在心中的牵挂还比较少的时候  去领略一下别的地方呢？  在我还不是那么世故的时候  多去寻找一些单纯的喜爱呢？ 我想答案是肯定的  起码百分之七十是肯定的  &lt;/p&gt;
&lt;p&gt;我很想感谢一下我的好哥们 周哥 假如是我自己我可能没有勇气迈出这一步  但是有一个一起同行的人  让我对路上充满了信心  但是反过来想 如果哈罗德在路上有另外一个同行的人 他还会那样吗  他还会扔下所有东西只带着他的背包 指南针 和睡袋在席地而睡  领略他一路上的风光么  答案我不知道  可能这个答案需要我去验证吧  &lt;/p&gt;
&lt;p&gt;连国家都有着一个个的五年计划 那我是不是也要有一个呢  我觉得计划是五年是有原因的  一个阶段性的目标并不能使一蹴而就的  需要你努力去实践  五年时间的长短感觉正好可以当做一个阶段  我的第一个五年计划就从毕业的2015年到2020年吧  这五年目标不多 第一是能把自己以后吃饭的本领掌握好  第二多去看看路上的风景  第三把自己推销给另一个人  以五年时间完成这三个目标  加油&lt;/p&gt;
&lt;p&gt;最后&lt;/p&gt;
&lt;p&gt;我一直都想做一个自在如风的人  无奈每个人牵挂的事情太多  并不能随着你的想法去改变  随着自己的成长能让牵挂慢慢变少   把一切都能握在手中吧 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从什么时候开始我们迷失了自己？&lt;/p&gt;
&lt;p&gt;一年半之前 当初自己没有选择回家去向父母希望的考一个公务员  或者找一个稳定的工作 因为我不想这么一辈子就这么过去  毕了业之后就过着一种从二十岁就看到五十岁的生活  每天都重复重复的生活  梭罗说过一句话：大多数人生活在平静的
    
    </summary>
    
      <category term="杂事二三" scheme="http://www.yatessss.com/categories/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
    
      <category term="杂事二三" scheme="http://www.yatessss.com/tags/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
  </entry>
  
  <entry>
    <title>一个自动翻谱的页面</title>
    <link href="http://www.yatessss.com/2017/01/06/%E4%B8%80%E4%B8%AA%E8%87%AA%E5%8A%A8%E7%BF%BB%E8%B0%B1%E7%9A%84%E9%A1%B5%E9%9D%A2.html"/>
    <id>http://www.yatessss.com/2017/01/06/一个自动翻谱的页面.html</id>
    <published>2017-01-05T16:00:00.000Z</published>
    <updated>2017-01-10T16:43:50.000Z</updated>
    
    <content type="html">&lt;p&gt;起因：其实从很早之前就有过这方面的问题，就是在平时弹琴的时候，谱子很很多张图片，然后弹完这一页之后就必须得去翻谱子，这样总是得停下来很烦人，但是自己一直也很懒。。。。就一直用手翻没有去解放生产力，最近买了新电脑终于可以愉快地在家开发了~ 所以利用周末就做了一个可以设置好时间点自己翻谱子的页面~ 目前的版本功能还不完善，就是可以设置响应时间点来翻谱子，没有什么其他功能，因为是自己用可以满足自己的需求就可以了，如果以后还会有人用到的话，可能会考虑再添加一些功能吧~&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://guitar.yatessss.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个是地址咯~&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个页面因为第一开始就是从简单出发的，没有考虑用到框架，所以就是用了最简单的jQuery来完成的。（因为好长时间不用jQuery，当我去写jQuery的时候，我发现自己已经忘了不少了，还得不时的去翻文档真要命 😂😂😂 ）&lt;/p&gt;
&lt;p&gt;首先是选取文件，整个逻辑基本就是照搬MDN的文档上面的例子&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Using_files_from_web_applications&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;在web应用中使用文件&lt;/a&gt;，这个选取文件部分的逻辑基本没有变，就是在整个逻辑部分做了一些处理，而且还存在一些小bug，但是整个流程上面没有什么问题了。&lt;/p&gt;
&lt;p&gt;就说制作当中遇到的几个技术盲点吧。&lt;/p&gt;
&lt;p&gt;一、setTimeout的问题，我在计时处理的时候用的是setTimeout，然后递归的去调用自己。然后发现自己调用的时候，只执行了一次就停止了，那肯定是我写的方法不对，然后就一番搜索。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3755709/problem-with-settimeout-function-is-not-define&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;problem with setTimeout “function is not define” !&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本有两种方法可以使用：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;changePosition&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      index++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      timer = setTimeout(changePosition, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;changePosition&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      index++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(index)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      timer = setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;changePosition()&amp;#125;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;二、更改input中placehodler的颜色，这个问题其实以前就遇到过，然后解决了时间久了就又忘了，还是贴出来一下吧：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000000397925&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用CSS修改HTML5 input placeholder颜色&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-input-placeholder&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-webkit-input-placeholder&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:    &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:-moz-placeholder&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:-moz-placeholder&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:    &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-moz-placeholder&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;::-moz-placeholder&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:    &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:-ms-input-placeholder&lt;/span&gt;, &lt;span class=&quot;selector-tag&quot;&gt;textarea&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:-ms-input-placeholder&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;color&lt;/span&gt;:    &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;三、第三个是和jquery相关的，我对jquery的了解不够多，其实这个问题应该很普遍，就是事件解绑上面，在原生上面是addEventListener和removeEventListener，在jquery中只需要用到&lt;code&gt;.off()&lt;/code&gt;和&lt;code&gt;.on()&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;p&gt;剩下基本没有问题了，后来又从setTimeout看到了JavaScript的运行机制，我先放一小段代码在这里：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; start = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; end = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;() - start);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,  &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;() - start &amp;lt;= &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;你认为这个运行的结果是什么呢？&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;·&lt;/p&gt;
&lt;p&gt;答案是1000+（1000以上的数字）&lt;/p&gt;
&lt;p&gt;如果你的答案是错的，那你也应该了解一下JavaScript运行的机制了。&lt;/p&gt;
&lt;p&gt;有这么两篇文章应该可以帮你理清思路：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://ghmagical.com/article/page/id/H61NOVU0RZ9Y&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;你应该知道的setTimeout秘密&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2014/10/event-loop.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript 运行机制详解：再谈Event Loop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;还有一个视频：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=8aGhZQkoFbQ&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;What the heck is the event loop anyway?&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;起因：其实从很早之前就有过这方面的问题，就是在平时弹琴的时候，谱子很很多张图片，然后弹完这一页之后就必须得去翻谱子，这样总是得停下来很烦人，但是自己一直也很懒。。。。就一直用手翻没有去解放生产力，最近买了新电脑终于可以愉快地在家开发了~ 所以利用周末就做了一个可以设置好时间
    
    </summary>
    
      <category term="自娱自乐" scheme="http://www.yatessss.com/categories/%E8%87%AA%E5%A8%B1%E8%87%AA%E4%B9%90/"/>
    
    
      <category term="JavaScript" scheme="http://www.yatessss.com/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://www.yatessss.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>写在2016年末</title>
    <link href="http://www.yatessss.com/2017/01/01/%E5%86%99%E5%9C%A82016%E5%B9%B4%E6%9C%AB.html"/>
    <id>http://www.yatessss.com/2017/01/01/写在2016年末.html</id>
    <published>2016-12-31T16:00:00.000Z</published>
    <updated>2017-01-09T11:32:25.000Z</updated>
    
    <content type="html">&lt;p&gt;回想起2016年是不是什么都记不起来了 对啊一年又匆忙的过去了 这一年和往年并没有任何不一样 还是一样谨慎 一样平凡 不管是在哪方面 都是那么普通 我一直都和别人说 我的一生就是谨慎的一生  人生一直都在既定的轨道上前行 没有任何出格的事情  学习 工作 生活  &lt;/p&gt;
&lt;p&gt;昨天和朋友讨论 到底什么算是出格的事情呢？  当时想了很久 也没有想到一个满意的答案  今天在想起来 到底什么才算是出格的事情呢  我想就是你为了不想在既定的轨道上前行 所做的努力 这算不算应该叫做出格的事情   我想了很久 觉得这个答案在我心里是认可的  &lt;/p&gt;
&lt;p&gt;前几天看过一个谈话类的节目  里面说  现在社会中仿佛每个人的选择有很多种 但其实在每个人的选择是很少的 确实啊  我总会想 我想当一个木匠  当一个画家  但是如果你放弃了现在的工作 你用什么来立命呢？ 所以藏在心里的梦想 敢去追逐  打破既定那就是出格了 &lt;/p&gt;
&lt;p&gt;我呢 只能是藏在这个面具下面 谨慎的前行了吧 现在在回北京的火车上写下了自己想到的一些  说矫情也确实挺矫情的  早晨出门的时候天还没亮 说是回家回家  但是真的在家陪伴家人的时间却又是多少?  大部分时间都是和朋友一起玩  说起来也挺惭愧的  拿这个当借口元旦放假回来了 &lt;/p&gt;
&lt;p&gt;往常我如果只放三天的假 我是不会回家的 因为在路上就花去了大部分时间  我回去是有私心的 我以为可以感动别人 其实只是感动了自己而已  仅此而已 现在看起来也只能是无奈的笑笑了  我原来说过一句话：人生无非两种情况 当初为什么那么傻逼 当初为什么不那么傻逼  对 我就是回来践行当初为什么不那么傻逼  &lt;/p&gt;
&lt;p&gt;起码一些东西明白了 心里就能不时常去牵挂了 朋友说我是活在自己世界里的一个人 固执倔强 有自己的想法 但是不自信 太敏感 有些事其实不用去想那么多 都没什么的  我想了一下还真是挺符合我的 我是太容易想多了 把一些捕风捉影的事情看得太重了  这也就给自己造了一个笼子  熟悉了 都不敢在天空了中飞翔了  &lt;/p&gt;
&lt;p&gt;总是很羡慕电影里的男主角  总是很有勇气的和女主角表白  没有那么多顾虑 很羡慕这种坦然  不知道自己什么时候也可以变成这样的坦然的人&lt;/p&gt;
&lt;p&gt;说了这么多 但标题是总结2016 那我还是应该努力回想起今年到底做了什么事 是可以让我小小总结一下的&lt;br&gt;第一个应该是工作吧  在这一年里工作中 慢慢从一个新手变成了一个熟手 大部分工作都可以自己独立完成了 从一开始的一个菜鸟 慢慢成长了起来 说起现在的工作 说不上有多喜欢 但是并不反感  很享受那种独立完成工作的成就感 学习新东西时候的喜悦感  那种体验让我觉得 工作就应该是这样的 总可以给你一个新鲜感 让你孜孜不倦的探索 收获  整个一年 上半年都应该属于一个刚刚入门的状态 看到什么都特别好奇 看过react node webpack  等等等等 但是回过头来你发现你还是什么都不会 你只是为了看而在看 当用的时候你依然什么都不会  基本上上半年就属于这么一个贪多嚼不烂的状态  那会还信心满满的去了锤子面个了个试结果可想而知  下半年因为公司新来了一个技术不错的同事  我们的技术从原来的grunt+zepto这种形式转变成了vue+webpack+postcss 这样的套路  从那会就开始学习vue  至今已经半年多了 现在把vue用到工作中已经得心应手了 期间也为了练习vue 写了知乎日报这样的小项目去练手 但是我深知自己在基础方面的是很缺乏的 所以接下来的一段时间应该会重点看看基础上的东西 哦对了 我最近一直在看react+redux 的技术栈  为了可以练手 我还是准备写知乎日报的小项目 因为对他的接口逻辑都熟悉一些 在基友的帮助下 现在这个项目已经完成了百分之三十左右了 希望在年前我可以把 这个项目写完 然后可以熟悉了react方面的一些知识  工作也不是说一口可以吃成一个胖子的 继续努力吧&lt;/p&gt;
&lt;p&gt;生活方面也有一些变化吧 从原来的一起合租变成了自己住 再也没有同学在一起插科打诨了 时常会聚一下 但是大多数时候还是自己一个人在家 还好我是一个比较安静的人 可以适应那种独处的生活 也因为我有一把琴吧  闲着无聊的大多数时间还是跟他打交道的  排解一下无聊的生活  周末在家每周会打扫打扫家 给自己一个新的心情吧  吃饭成了最大的难题 到底周末吃什么呢？ 想原来一起做饭吃的日子还是很怀念的呀 自己还是坚持着弹琴录歌  这是第三年了 希望我还能坚持下去  在着新的一年里 我想把自己的生活 过的更有趣一点 我要尝试学习写歌 因为作为一个矫情的人 肯定会有很多抱怨的可以写成歌词吧  希望这个愿望可以在新的一年里成真  既然都说到这里了  我先放词为敬  昨天朋友说我活在自己的世界里 所以我这么写了些：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我想逃离我的世界 不想自信倔强独自表演&lt;/p&gt;
&lt;p&gt;我想逃离我的世界 不想凭空想象蜜语甜言&lt;/p&gt;
&lt;p&gt;我想活到你的世界 重要的角色由你扮演&lt;/p&gt;
&lt;p&gt;我想活到你的世界 分享秘密随风飘到天边&lt;/p&gt;
&lt;p&gt;我想逃离我的世界 心理支撑不下大大的冒险&lt;/p&gt;
&lt;p&gt;我想逃离我的世界 双手拥抱摸到自己的肩&lt;/p&gt;
&lt;p&gt;我想活到你的世界 共同坚强坦然面对一切&lt;/p&gt;
&lt;p&gt;我想活到你的世界 一起 一起走到海角天边&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;矫情死了 &lt;/p&gt;
&lt;p&gt;回去就准备剪断那个三千烦恼丝吧  在新的一年里 能从头开始  为了能做一个有趣的 自在如风的人去努力吧  &lt;/p&gt;
&lt;p&gt;新的一年在本职工作上面不会放松，自己的爱好坚持下去，还准备去运营一个公众号，写一个属于自己的小程序，学习一下设计方面的东西。可能想要的太多，一点一点来吧。&lt;/p&gt;
&lt;p&gt;在这人世间 有些路是非要单独一个去面对 单独一个人去跋涉的 路再长再远 夜再黑再暗  也得独自默默地走下去 ———— 席慕蓉&lt;/p&gt;
&lt;p&gt;就这样吧 让我默默carry一会 &lt;/p&gt;
&lt;p&gt;再加一句吧   电影里说，“你我之间本无缘分，全靠我死撑，我明白的。”以前觉得这话直抵泪点，现在却觉得，说白了，爱一个人真的就是自己一个人的事儿，得拿出过日子一样的态度。只要还想继续，就大不了哭一场，硬着头皮爱下去。世间什么缘分不缘分，都是撑来的。——七堇年&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;回想起2016年是不是什么都记不起来了 对啊一年又匆忙的过去了 这一年和往年并没有任何不一样 还是一样谨慎 一样平凡 不管是在哪方面 都是那么普通 我一直都和别人说 我的一生就是谨慎的一生  人生一直都在既定的轨道上前行 没有任何出格的事情  学习 工作 生活  &lt;/p&gt;

    
    </summary>
    
      <category term="杂事二三" scheme="http://www.yatessss.com/categories/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
    
      <category term="杂事二三" scheme="http://www.yatessss.com/tags/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
  </entry>
  
  <entry>
    <title>时间是个贼啊</title>
    <link href="http://www.yatessss.com/2016/12/02/%E6%97%B6%E9%97%B4%E6%98%AF%E4%B8%AA%E8%B4%BC%E5%95%8A.html"/>
    <id>http://www.yatessss.com/2016/12/02/时间是个贼啊.html</id>
    <published>2016-12-01T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;无事 今天看了岁月神偷&lt;br&gt;电影缓缓的把那份感动讲述了出来&lt;br&gt;看到了生死之外其实所有的事情都会过去&lt;br&gt;人生本来就是这样一脚佳一脚难&lt;br&gt;走呀走呀&lt;br&gt;就走了到苦海的那边去&lt;/p&gt;
&lt;p&gt;可能是因为我还没当父母&lt;br&gt;没有活在当时的那个环境下&lt;br&gt;感受不到真的生活艰难&lt;br&gt;感受不到为人父母的那份不易&lt;br&gt;父母辛辛苦苦一辈子不就是为了我们生活的更好嘛  &lt;/p&gt;
&lt;p&gt;当时看到进二和奶奶那段&lt;br&gt;我特别想哭&lt;br&gt;我想起了我的奶奶&lt;br&gt;她的样子我早就模糊了&lt;br&gt;奶奶走的早&lt;br&gt;能记得的事情就是小的时候奶奶总是在冬天给我冻糖水的冰坨&lt;br&gt;冻好之后用勺子让我一点一点来刮着吃&lt;br&gt;在夏天不能冻的时候&lt;br&gt;奶奶就会去买小布丁&lt;br&gt;我一根奶奶一根我俩就坐在院子葡萄架下的阴凉里&lt;br&gt;一口一口的吃着雪糕&lt;br&gt;好不惬意&lt;br&gt;怀念那时无忧无虑的日子&lt;br&gt;也想念奶奶&lt;br&gt;影片里说逝去的人都会到苦海的另一边&lt;br&gt;想要见到逝去的亲人的办法&lt;br&gt;就是把自己所有珍贵的东西扔到苦海中&lt;br&gt;把苦海填满&lt;br&gt;这样就可以到苦海那边去了&lt;br&gt;如果真的可以去苦海那边再见到奶奶&lt;br&gt;我愿意把我所有重要的宝贵的东西全部扔掉&lt;br&gt;去苦海的那面去看望奶奶&lt;/p&gt;
&lt;p&gt;让我第一次对死亡有了印象的就是大舅走的时候&lt;br&gt;那会应该是07、08年的时候&lt;br&gt;我初三&lt;br&gt;那年家里的气氛就很不对劲&lt;br&gt;因为大舅得了癌症住院了&lt;br&gt;原来去姥姥家过年&lt;br&gt;男的 女的各能凑成一桌麻将&lt;br&gt;而我们弟兄三个总会去家附近的游戏厅去玩游戏 去广场放炮&lt;br&gt;可那之后&lt;br&gt;麻将只能凑齐一桌了&lt;br&gt;再也没有那么热闹了&lt;br&gt;我还清楚的记得大舅临走的时候&lt;br&gt;大舅病重以后很久没有那么清楚的说过话了&lt;br&gt;应该是回光返照吧&lt;br&gt;他吩咐我哥好好学习&lt;br&gt;那四个字清楚的印在我的记忆里&lt;br&gt;大舅一直认为只有好好学习才会有出息&lt;br&gt;那是我第一次体会到时间是一个无情的小偷&lt;br&gt;他会偷走你的亲人  偷走你所在乎的东西&lt;/p&gt;
&lt;p&gt;故事还讲了关于爱情&lt;br&gt;是啊在懵懂的时候&lt;br&gt;那种感情是很值得怀念的&lt;br&gt;故事讲的是一个悲剧&lt;br&gt;一个熊穷小子喜欢上了一个富家小姐&lt;br&gt;因为自卑他选择了放弃&lt;br&gt;可是女生的的主动让他知道了他们是互相喜欢的&lt;br&gt;知道了但是也无能为力了&lt;br&gt;记得我初中的时候  也喜欢过一个女孩子&lt;br&gt;女孩子呢大概也喜欢我吧&lt;br&gt;上课传纸条&lt;br&gt;有时候说上一句话就高兴半天&lt;br&gt;我还清楚的记得那时冬天去数学老师家补课&lt;br&gt;我俩坐在一起&lt;br&gt;她突然就抓住了我的手&lt;br&gt;就那样我俩紧紧的抓了一节课&lt;br&gt;补完课又一起拉手回的家&lt;br&gt;记得在期末考试完返校领成绩单的时候&lt;br&gt;她说她要转学走了&lt;br&gt;我真的特别舍不得她&lt;br&gt;那时候班里就我们两个人了&lt;br&gt;可是我什么都不敢去做只能笑着和她说到那面一切都要好好的&lt;br&gt;就像影片里面进一和女孩说我一定会拿第一一样&lt;br&gt;现在想起来我应该给她一个大大的拥抱才对&lt;br&gt;那会没有手机书信来往过一次&lt;br&gt;座机联系过  后来慢慢就没有了&lt;br&gt;有了微信互相加了&lt;br&gt;但是谁都不会说话&lt;br&gt;各自都有了各自的生活圈子&lt;br&gt;那&lt;br&gt;应该算我们  至少是我自己的一段美好回忆吧&lt;/p&gt;
&lt;p&gt;亲情爱情影片里都讲了&lt;br&gt;但是没有讲友情&lt;br&gt;其实时间也偷走了我们的朋友&lt;br&gt;记得幼儿园的时候和我最好的朋友叫郭昌&lt;br&gt;他坐我旁边  整个幼儿园我和他都最好&lt;br&gt;可是分开了之后慢慢也就淡了&lt;br&gt;小学一二年级的时候  和我最好的叫丁强&lt;br&gt;后来他转学了再也没有联系了&lt;br&gt;我曾经的还有很多好朋友辛茂林 付强  徐凯超 潘宇鹏 等等&lt;br&gt;他们在某一段时间里都和我有很重要的联系&lt;br&gt;但是因为某一件事可能是小到我现在都忘了是什么的事情&lt;br&gt;可能是因为时间  因为距离 慢慢的时间把他们从我的身边都偷走了&lt;br&gt;朋友大概就是这样  之间需要互动&lt;br&gt;像http三次握手一样&lt;br&gt;我请求你需要有回应&lt;br&gt;如果没有这次连接就算中断了&lt;br&gt;如果总是中断没有回应&lt;br&gt;我认为这个访问的地址就是无效得了  我可能不会再去主动访问了   &lt;/p&gt;
&lt;p&gt;时间还会偷走很多很多&lt;br&gt;唯有把握当下&lt;br&gt;抓住一分一秒用力的活&lt;br&gt;才能从小偷那里夺回来一些&lt;/p&gt;
&lt;p&gt;夺回来！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;无事 今天看了岁月神偷&lt;br&gt;电影缓缓的把那份感动讲述了出来&lt;br&gt;看到了生死之外其实所有的事情都会过去&lt;br&gt;人生本来就是这样一脚佳一脚难&lt;br&gt;走呀走呀&lt;br&gt;就走了到苦海的那边去&lt;/p&gt;
&lt;p&gt;可能是因为我还没当父母&lt;br&gt;没有活在当时的那个环境下&lt;br&gt;感受不到真的
    
    </summary>
    
      <category term="杂事二三" scheme="http://www.yatessss.com/categories/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
    
      <category term="杂事二三" scheme="http://www.yatessss.com/tags/%E6%9D%82%E4%BA%8B%E4%BA%8C%E4%B8%89/"/>
    
  </entry>
  
  <entry>
    <title>前端直接生成及下载二维码和使用七牛SDK上传图片</title>
    <link href="http://www.yatessss.com/2016/10/17/%E5%89%8D%E7%AB%AF%E7%9B%B4%E6%8E%A5%E7%94%9F%E6%88%90%E5%8F%8A%E4%B8%8B%E8%BD%BD%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%92%8C%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9BSDK%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87.html"/>
    <id>http://www.yatessss.com/2016/10/17/前端直接生成及下载二维码和使用七牛SDK上传图片.html</id>
    <published>2016-10-16T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;最近工作比较紧张，除了日常的小需求之外，还做了一个给商户用的后台。技术栈除了vue之外，还用到了&lt;code&gt;materialize&lt;/code&gt;这个UI库&lt;a href=&quot;https://github.com/dogfalo/materialize/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;，但是这个库有一个缺点，那就是强依赖与jquery。&lt;/p&gt;
&lt;p&gt;因为是后台，依赖juqery倒也没什么，因为是在pc端使用对文件大小的要求不是特别高，而且基于juqery的插件特别多，有些地方如果自己去处理可能会存在一些不兼容的问题，用插件会避免很多怪异的问题。&lt;/p&gt;
&lt;p&gt;由于这个业务交互不是特别复杂，其中有两点可以分享的：一个就是前端处理二维码及下载，只需要从后端获取到生成二维码的url，就可以生成二维码以及把他下载下来，不需要后台的处理；另一个是应用七牛的SDK去上传图片，其上传也是从前端来完成，不需要后端处理。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;前端直接生成二维码及下载&quot;&gt;&lt;a href=&quot;#前端直接生成二维码及下载&quot; class=&quot;headerlink&quot; title=&quot;前端直接生成二维码及下载&quot;&gt;&lt;/a&gt;前端直接生成二维码及下载&lt;/h3&gt;&lt;p&gt;生成二维码这个没什么，就是一个生成二维码的库&lt;a href=&quot;http://jeromeetienne.github.com/jquery-qrcode/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;这个库是基于jquery的，github上还有不依赖于jquery的库。这样二维码就生成了。&lt;/p&gt;
&lt;p&gt;下载二维码，原理是这样的：把生成的img标签利用canvas的&lt;code&gt;toDataURL()&lt;/code&gt;方法转变为base64格式的，然后把base64的串放到&lt;code&gt;a标签&lt;/code&gt;的href属性中。利用&lt;code&gt;a标签&lt;/code&gt;的download属性，就可以把它下载下来。如果不仅仅需要二维码而是需要在二维码中加入一些文字或者背景图的话，就可以利用canvas把二维码和需要的文字背景图都绘制到canvas中，再获取这个canvas的&lt;code&gt;toDataURL()&lt;/code&gt;，再依据上面的方法去下载下来。&lt;/p&gt;
&lt;p&gt;不过这种方法也有不足的地方，比如说批量下载。这种方法如果需要批量下载就必须依靠js，然后去遍历&lt;code&gt;a标签&lt;/code&gt;去主动触发click事件。&lt;/p&gt;
&lt;p&gt;下面贴一下代码就好咯~ &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成二维码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可能代码和业务会有一定关联，我把大部分关联的都删掉了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//请求要生成url接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url		:	&lt;span class=&quot;string&quot;&gt;&#39;http://172.100.101.106:9099/merchant_qrcode/dccode&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type	:	&lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataType:	&lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data	:	post_data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  success:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&quot;#qrcode_box&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(data[&lt;span class=&quot;string&quot;&gt;&#39;respcd&#39;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;0000&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qrcodes = data.data.qrcode_list; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;qrcodes.length;i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; box_label = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;label for=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39;&amp;gt;&amp;lt;/label&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img_panel = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=&#39;col-lg-4 col-md-4 col-sm-6&#39;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; checkbox = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;input class=&#39;chk&#39; type=&#39;checkbox&#39; id=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; /&amp;gt;&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_panel = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=&#39;bg-panel&#39;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_elem = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=&#39;qrcode&#39;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_desc = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=&#39;text-desc text-center&#39;&amp;gt;&amp;lt;span&amp;gt;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;area_name&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; label = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;label for=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39;&amp;gt;&amp;lt;/label&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//拼接dom包含checkbox，显示二维码的div，文字信息的div等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_panel.append(checkbox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_panel.append(label);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_panel.append(new_elem);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new_panel.append(new_desc);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//生成下载按钮，把一些信息保存到标签的data属性里，比如要拼接到canvas中的文字和url信息等等。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; btn_panel = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div class=&#39;btn-panel&#39;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; download_elem = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div style=&#39;display:inline-flex;&#39;&amp;gt;&amp;lt;button class=&#39;m-l btn btn-primary download_pngcode&#39; data-num=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; data-qrcode=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;qrcode&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; data-area_name=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;area_name&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; onclick=download_qrcode_png(this) &amp;gt;下载桌贴&amp;lt;/button&amp;gt;&amp;lt;button class=&#39;m-l download_code btn btn-warning&#39; data-num=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;num&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; data-qrcode=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;qrcode&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; data-area_name=&#39;&quot;&lt;/span&gt;+qrcodes[i][&lt;span class=&quot;string&quot;&gt;&#39;area_name&#39;&lt;/span&gt;]+&lt;span class=&quot;string&quot;&gt;&quot;&#39; onclick=download_qrcode(this) &amp;gt;下载二维码&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        btn_panel.append(download_elem);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img_panel.append(new_panel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        img_panel.append(btn_panel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        box_label.append(img_panel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//生成二维码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qrcode = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QRCode(new_elem,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          width : &lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          height:	&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        qrcode.makeCode(qrcodes[i].qrcode);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      _this.btnDisabled &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//下载二维码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//仅下载二维码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exports.download_qrcode = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_elem = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qrcode = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QRCode(new_elem,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width : &lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//设置宽高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height : &lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log($(e));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qrcode.makeCode($(e).data(&lt;span class=&quot;string&quot;&gt;&#39;qrcode&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;),ctx=c.getContext(&lt;span class=&quot;string&quot;&gt;&#39;2d&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qr_ele = qrcode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c.width=&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c.height=&lt;span class=&quot;number&quot;&gt;310&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.rect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,c.width,c.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fillStyle=&lt;span class=&quot;string&quot;&gt;&#39;#fff&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fill();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  img.crossOrigin = &lt;span class=&quot;string&quot;&gt;&#39;Anonymous&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//解决跨域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  img.src = qrcode._el.children[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].toDataURL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.drawImage(img,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fillStyle=&lt;span class=&quot;string&quot;&gt;&#39;#fe9b20&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.font = &lt;span class=&quot;string&quot;&gt;&quot;bold 32px 黑体&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.textAlign = &lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在二维码下方添加文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fill_txt = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;) !=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill_txt = $(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill_txt += ($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;号桌&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fillText(fill_txt,&lt;span class=&quot;number&quot;&gt;131&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//读取生成标签中的data属性，生成下载a标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $a = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&quot;href&quot;&lt;/span&gt;, c.toDataURL()).attr(&lt;span class=&quot;string&quot;&gt;&quot;download&quot;&lt;/span&gt;, $(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;)+$(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&quot;.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].click();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//下载带背景图的二维码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;exports.download_qrcode_png = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;e&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; new_elem = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qrcode = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; QRCode(new_elem,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width : &lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;,&lt;span class=&quot;comment&quot;&gt;//设置宽高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height : &lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  qrcode.makeCode($(e).data(&lt;span class=&quot;string&quot;&gt;&#39;qrcode&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;),ctx=c.getContext(&lt;span class=&quot;string&quot;&gt;&#39;2d&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; qr_ele = qrcode;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c.width=&lt;span class=&quot;number&quot;&gt;460&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  c.height=&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.rect(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,c.width,c.height);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fill();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//读取背景图&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bg_img = $(&lt;span class=&quot;string&quot;&gt;&quot;#background_image&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; img = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  img.crossOrigin = &lt;span class=&quot;string&quot;&gt;&#39;Anonymous&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//解决跨域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  img.src = qrcode._el.children[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].toDataURL();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//画到canvas中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.drawImage(bg_img,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;460&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;620&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.drawImage(img,&lt;span class=&quot;number&quot;&gt;98&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;162&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fillStyle=&lt;span class=&quot;string&quot;&gt;&#39;#fe9b20&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.font = &lt;span class=&quot;string&quot;&gt;&quot;bold 32px 黑体&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.textAlign = &lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fill_txt = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;) !=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill_txt = $(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;) != &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fill_txt += ($(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;号桌&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ctx.fillText(fill_txt,&lt;span class=&quot;number&quot;&gt;230&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;465&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;//document.body.appendChild(c);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $a = $(&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;&quot;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&quot;href&quot;&lt;/span&gt;, c.toDataURL()).attr(&lt;span class=&quot;string&quot;&gt;&quot;download&quot;&lt;/span&gt;, $(e).data(&lt;span class=&quot;string&quot;&gt;&quot;area_name&quot;&lt;/span&gt;)+$(e).data(&lt;span class=&quot;string&quot;&gt;&quot;num&quot;&lt;/span&gt;)+&lt;span class=&quot;string&quot;&gt;&quot;.png&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  $a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].click();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;使用七牛SDK上传图片&quot;&gt;&lt;a href=&quot;#使用七牛SDK上传图片&quot; class=&quot;headerlink&quot; title=&quot;使用七牛SDK上传图片&quot;&gt;&lt;/a&gt;使用七牛SDK上传图片&lt;/h3&gt;&lt;p&gt;七牛的开发文档地址&lt;a href=&quot;http://developer.qiniu.com/code/v6/sdk/javascript.html#upload&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里。&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按照七牛文档和demo就可以很快实现一个上传图片的功能。我来说一下上传的大概过程和我遇到的一个问题。&lt;/p&gt;
&lt;p&gt;首先服务端的会先做一些&lt;a href=&quot;http://developer.qiniu.com/code/v7/sdk/python.html#io-put&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;工作&lt;/a&gt;，这个我们不太需要关心只要知道我们在上传图片之前，需要先向服务端去发起一次请求去拿到token和key，因为可以看到七牛上传图片时是需要这两个参数的。然后开始上传图片，上传图片后还有一个成功回调事件，在回调事件中可以做一些事情。（告知服务端图片上传成功了，并把这张图片的url告诉服务端，这样才能把图片对应起来）&lt;/p&gt;
&lt;p&gt;这里这再插一句，七牛的SDK使用的plupload插件是这样的：他在初始化的时候需要的参数有token，按钮的&lt;code&gt;id&lt;/code&gt;，还有一个可选的参数key（这个参数是可以把文件的url替换成你自定义的）。然后会在方法执行时会去寻找你这个id的button，去初始化它，在这个标签下面再去创建一个input标签，在你点击这个id的button的时候他会去隐式的点击下面的input来唤起浏览器选择文件。&lt;/p&gt;
&lt;p&gt;好，大概的过程就是这样的。没有什么问题，但是不管文档和demo都只说了只有一个按钮的情况。如果我有一个列表，上面有很多上传按钮这种情况该怎么办？文档上有类似问题：&lt;a href=&quot;http://developer.qiniu.com/code/v6/sdk/javascript.html#faq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;。但是他这里说的情况是固定的几个按钮，并且知道他的token和key，还有按钮标签的&lt;code&gt;id&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这种是不符合我目前需求的，因为我目前整个列表有几个上传按钮都是不确定的，按钮的&lt;code&gt;id&lt;/code&gt;等等也是不固定的，我要等请求后端接口拿到token和key之后，再去初始化按钮，并且每个按钮和列表每一行的商品要一一对应。所以在完成这个初始化多个上传按钮时碰到了问题。&lt;/p&gt;
&lt;p&gt;我们分析一下：如果需要一一对应那么我必须使每一行的button都有自己单独的id、token、和key（因为需要自定义上传图片的url）。&lt;/p&gt;
&lt;p&gt;最开始我是这么写的：（大概过程可以看注释）&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//请求商品列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: &lt;span class=&quot;string&quot;&gt;&#39;http://172.100.101.106:9099/goods/list&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  callback: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//把初始化队列置空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _this.$set(&lt;span class=&quot;string&quot;&gt;&#39;initList&#39;&lt;/span&gt;, [])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res.respcd === &lt;span class=&quot;string&quot;&gt;&#39;0000&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      _this.$set(&lt;span class=&quot;string&quot;&gt;&#39;goodsList&#39;&lt;/span&gt;, res.data.list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//遍历商品列表的每一项，创建一个新的对象包含初始化时需要的id，然后用unionid关联商品列表和新建的初始化列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len = res.data.list.length; i &amp;lt; len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res.data.list[i].img === &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; a = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            id: &lt;span class=&quot;string&quot;&gt;&#39;img-id-&#39;&lt;/span&gt; + res.data.list[i].id,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            unionid: res.data.list[i].unionid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;//把对象push进初始化列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          _this.initList.push(a)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//这个是vue监听dom渲染完成的事件（可忽略）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _this.$nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//初始化列表的每一项进行初始化按钮的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len = _this.initList.length; i &amp;lt; len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _this.initUpload(_this.initList[i].unionid, _this.initList[i].id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//方法接受两个参数 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//unionid 这个参数是最后上传完成后给服务端发请求告知 是哪个商品的图片，让服务端把商品和图片对应起来；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//id 就是初始化按钮是需要的id；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;initUpload (unionid, id) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; _this = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//这个是获取token和key的接口，上面过程说明了一下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          url: &lt;span class=&quot;string&quot;&gt;&#39;https://xxxxxxxxx/qiniu_token&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          type: &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;appcode&#39;&lt;/span&gt;:	&lt;span class=&quot;string&quot;&gt;&#39;xxxxxx&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;func&#39;&lt;/span&gt;:	&lt;span class=&quot;string&quot;&gt;&#39;upload&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;format&#39;&lt;/span&gt;:	&lt;span class=&quot;string&quot;&gt;&#39;cors&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          timeout: &lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;string&quot;&gt;&#39;respcd&#39;&lt;/span&gt;] === &lt;span class=&quot;string&quot;&gt;&#39;0000&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; uptoken = data.data.token&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              ******************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; key = data.data.key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              ******************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uploader = Qiniu.uploader(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                runtimes: &lt;span class=&quot;string&quot;&gt;&#39;html5,flash,html4&#39;&lt;/span&gt;,    &lt;span class=&quot;comment&quot;&gt;//上传模式,依次退化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                browse_button: id,       &lt;span class=&quot;comment&quot;&gt;//上传选择的点选按钮，**必需**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                uptoken: uptoken,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                domain: &lt;span class=&quot;string&quot;&gt;&#39;https://xxxxxxxxx.com/&#39;&lt;/span&gt;,   &lt;span class=&quot;comment&quot;&gt;//bucket 域名，下载资源时用到，**必需**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                get_new_uptoken: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//设置上传文件的时候是否每次都重新获取新的token&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                max_file_size: &lt;span class=&quot;string&quot;&gt;&#39;10mb&#39;&lt;/span&gt;,           &lt;span class=&quot;comment&quot;&gt;//最大文件体积限制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                flash_swf_url: &lt;span class=&quot;string&quot;&gt;&#39;./flash/Moxie.swf&#39;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//引入flash,相对路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                max_retries: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,                   &lt;span class=&quot;comment&quot;&gt;//上传失败最大重试次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                dragdrop: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,                   &lt;span class=&quot;comment&quot;&gt;//开启可拖曳上传&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                drop_element: id,        &lt;span class=&quot;comment&quot;&gt;//拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                chunk_size: &lt;span class=&quot;string&quot;&gt;&#39;4mb&#39;&lt;/span&gt;,                &lt;span class=&quot;comment&quot;&gt;//分块上传时，每片的体积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                auto_start: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;,                 &lt;span class=&quot;comment&quot;&gt;//选择文件后自动上传，若关闭需要自己绑定事件触发上传&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                init: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;FilesAdded&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, files&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    plupload.each(files, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;file&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;comment&quot;&gt;// 文件添加进队列后,处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;BeforeUpload&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, file&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// 每个文件上传前,处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;UploadProgress&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, file&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//                    $(&#39;#img_upload-&#39; + rand_num).addClass(&#39;spinner&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// 每个文件上传时,处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;FileUploaded&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, file, info&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; domain = up.getOption(&lt;span class=&quot;string&quot;&gt;&#39;domain&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; res = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(info)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sourceLink = domain + res.key &lt;span class=&quot;comment&quot;&gt;//获取上传成功后的文件的Url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      url: &lt;span class=&quot;string&quot;&gt;&#39;http://172.100.101.106:9099/goods/setimg&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      type: &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      data: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;unionid&#39;&lt;/span&gt;: unionid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;: sourceLink&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (data[&lt;span class=&quot;string&quot;&gt;&#39;respcd&#39;&lt;/span&gt;] === &lt;span class=&quot;string&quot;&gt;&#39;0000&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.Materialize.toast(&lt;span class=&quot;string&quot;&gt;&#39;添加商品图片成功&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          _this.getUserInfo(_this.currentPage, _this.pageSize)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      error: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.Materialize.toast(data.respmsg, &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;Error&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, err, errTip&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//上传出错时,处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.Materialize.toast(errTip, &lt;span class=&quot;number&quot;&gt;4000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    $(&lt;span class=&quot;string&quot;&gt;&#39;#img_upload&#39;&lt;/span&gt;).removeClass(&lt;span class=&quot;string&quot;&gt;&#39;spinner&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;UploadComplete&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;//队列文件处理完毕后,处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &lt;span class=&quot;string&quot;&gt;&#39;Key&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, file&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  	*************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    *************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;请注意我标&lt;strong&gt;&lt;em&gt;**&lt;/em&gt;&lt;/strong&gt;的那几行，我本意是把每一个ajax请求到的key，赋到每一个初始化按钮的方法中去，但是如果我们实际这么去写的话，token是对的，但是key总是最后一个请求的key，原因就是初始化中&lt;code&gt;&amp;#39;Key&amp;#39;&lt;/code&gt;这个方法，并不是在方法初始化的时候就去执行了，而是你再点击这个按钮的时候再去获取这个key的值，所以当你点击按钮时这个key的值就是最后一次请求到key的值了。（只有一个key会造成上传了多张图片，但是你只会有一个url的情况发生）&lt;/p&gt;
&lt;p&gt;那如何去在一个页面用七牛的SDK去初始化N个上传按钮呢？&lt;/p&gt;
&lt;p&gt;我当时试了闭包这种方法，大概是这样：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;key&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uploader = Qiniu.uploader(&amp;#123;&amp;#125;）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(key)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是并不可以。&lt;/p&gt;
&lt;p&gt;找到了一种变通式的解决方法，就是在你每次点击按钮时，去渲染一个新的DOM，再用这个新的DOM去执行初始化的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rand_num = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random()*&lt;span class=&quot;number&quot;&gt;100000000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#upload_block&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; html =&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div id=&quot;img-container-&#39;&lt;/span&gt;+rand_num+&lt;span class=&quot;string&quot;&gt;&#39;&quot; class=&quot;dz-default dz-message&quot;&amp;gt;&amp;lt;button id=&quot;img_upload-&#39;&lt;/span&gt;+rand_num+&lt;span class=&quot;string&quot;&gt;&#39;&quot; class=&quot;btn btn-default btn-lg&quot;&amp;gt;&amp;lt;i class=&quot;glyphicon glyphicon-plus&quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;span&amp;gt;上传图片&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;/div&amp;gt;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#upload_block&quot;&lt;/span&gt;).html(html);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//然后把这个DOM进行初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样同步的来进行，一次只有一个token和key，初始化一个按钮，这样就不会存在上面的问题，但是这样就意味着你点击上传按钮之后，又会出来一个蒙层点击蒙层上的按钮才可以选择图片，这样体验未免有些太差了。&lt;/p&gt;
&lt;h4 id=&quot;解决&quot;&gt;&lt;a href=&quot;#解决&quot; class=&quot;headerlink&quot; title=&quot;解决&quot;&gt;&lt;/a&gt;解决&lt;/h4&gt;&lt;p&gt;最后经过一下午的尝试，最后也是受到了demo的启发：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;FileUploaded&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;up, file, info&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// 每个文件上传成功后，处理相关的事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// 其中info是文件上传成功后，服务端返回的json，形式如：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//    &quot;hash&quot;: &quot;Fh8xVqod2MQ1mocfI4S4KpRL6D98&quot;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//    &quot;key&quot;: &quot;gogopher.jpg&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// 查看简单反馈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// var domain = up.getOption(&#39;domain&#39;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// var res = parseJSON(info);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;// var sourceLink = domain + res.key; 获取上传成功后的文件的Url&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;七牛给的上传说明中有这么一段，方法的第一个参数是up，通过注释我们可以看出这个参数可以获取到&lt;code&gt;Qiniu.uploader&lt;/code&gt;这个方法的一些配置参数的值，比如这一行&lt;code&gt;var domain = up.getOption(&amp;#39;domain&amp;#39;);&lt;/code&gt;他就获取到了domain这个配置的值（&lt;code&gt;即https://xxxxxxxxx.com/&lt;/code&gt;），可以看到&lt;code&gt;&amp;#39;Key&amp;#39;&lt;/code&gt;这个方法也会接受&lt;code&gt;up&lt;/code&gt;这个参数，所以可不可以在配置中多加一个keyValue的多余配置，来储存key值呢？&lt;/p&gt;
&lt;p&gt;经过试验答案是可以的！大概这样：（相同代码就不再重复）&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; uploader = Qiniu.uploader(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    keyValue: key,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    init: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;Key&#39;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;up, file&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; key = up.getOption(&lt;span class=&quot;string&quot;&gt;&#39;keyValue&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; key&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其他地方不变，这样经过试验可以很好地解决初始化多个按钮的问题！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近工作比较紧张，除了日常的小需求之外，还做了一个给商户用的后台。技术栈除了vue之外，还用到了&lt;code&gt;materialize&lt;/code&gt;这个UI库&lt;a href=&quot;https://github.com/dogfalo/materialize/&quot; target=&quot;_b
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="工作总结" scheme="http://www.yatessss.com/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>初试微信小程序需要注意的地方</title>
    <link href="http://www.yatessss.com/2016/09/30/%E5%88%9D%E8%AF%95%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9.html"/>
    <id>http://www.yatessss.com/2016/09/30/初试微信小程序需要注意的地方.html</id>
    <published>2016-09-29T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;最近微信小程序刚出来，挺火的，自己也准备尝试一下。文档什么的官方都已经提供而且很全面了，所以不准备介绍小程序呢的用法。&lt;/p&gt;
&lt;p&gt;来总结一下自己在尝试微信小程序时遇到的一些需要注意的地方吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;首先，小程序中的样式表（wxss）是不支持sass等一些预编译语言的，所以样式不能使用嵌套格式来写。&lt;/p&gt;
&lt;p&gt;还有就是如果看了wxml渲染出来的dom结构就知道，在html中一些常用的标签如：&lt;code&gt;&amp;lt;a&amp;gt;``&amp;lt;p&amp;gt;``&amp;lt;div&amp;gt;&lt;/code&gt;等等，在渲染后其实在前面都加了wx-的前缀，我经过试验其实在wxss在样式中还是可以使用标签选择器的，但是在小程序中没有默认的块级元素，所以如果使用&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;等标签还需要申明&lt;code&gt;display: block&lt;/code&gt;。所以可以使用wxml中定义的&lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt;标签，直接就是一个块元素。&lt;/p&gt;
&lt;p&gt;所以在wxss中最好还是用&lt;code&gt;class&lt;/code&gt;类选择器而不是标签选择器去写样式。&lt;/p&gt;
&lt;p&gt;也不会支持一些后代选择器。目前支持的只有这些：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;选择器&lt;/th&gt;
&lt;th&gt;样例&lt;/th&gt;
&lt;th&gt;样例描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.class&lt;/td&gt;
&lt;td&gt;.intro&lt;/td&gt;
&lt;td&gt;选择所有拥有 class=”intro” 的组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;#id&lt;/td&gt;
&lt;td&gt;#firstname&lt;/td&gt;
&lt;td&gt;选择拥有 id=”firstname” 的组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;element&lt;/td&gt;
&lt;td&gt;view&lt;/td&gt;
&lt;td&gt;选择所有 view 组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;element, element&lt;/td&gt;
&lt;td&gt;view checkbox&lt;/td&gt;
&lt;td&gt;选择所有文档的 view 组件和所有的 checkbox 组件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;::after&lt;/td&gt;
&lt;td&gt;view::after&lt;/td&gt;
&lt;td&gt;在 view 组件后边插入内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;::before&lt;/td&gt;
&lt;td&gt;view::before&lt;/td&gt;
&lt;td&gt;在 view 组件前边插入内容&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2&quot;&gt;&lt;a href=&quot;#2&quot; class=&quot;headerlink&quot; title=&quot;2&quot;&gt;&lt;/a&gt;2&lt;/h3&gt;&lt;p&gt;如果列表渲染和模板引用一起使用时，在父模板中使用&lt;code&gt;wx:for&lt;/code&gt;来循环渲染，然后把在子模板中用到的数据通过&lt;code&gt;data&lt;/code&gt;这个属性传入到子模板中。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//子模板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template name=&quot;list-component&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;view &amp;gt;&amp;#123;&amp;#123;text&amp;#125;&amp;#125;&amp;lt;/view&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//父模板&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;import src=&quot;../../component/list/list.wxml&quot;&amp;gt;&amp;lt;/import&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template wx:for=&quot;&amp;#123;&amp;#123;text&amp;#125;&amp;#125;&quot; is=&quot;list-component&quot; data=&quot;&amp;#123;&amp;#123;text: item&amp;#125;&amp;#125;&quot;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;3&quot;&gt;&lt;a href=&quot;#3&quot; class=&quot;headerlink&quot; title=&quot;3&quot;&gt;&lt;/a&gt;3&lt;/h3&gt;&lt;p&gt;wxss规定的rem单位和flexible的rem单位是由区别的：flexible规定把屏幕的宽度分成了10rem，但是wxss是把屏幕宽度分成了20rem。如果是原来web项目迁移的话需要注意一下。&lt;a href=&quot;https://mp.weixin.qq.com/debug/wxadoc/dev/framework/view/wxss.html?t=1475052057161&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;4&quot;&gt;&lt;a href=&quot;#4&quot; class=&quot;headerlink&quot; title=&quot;4&quot;&gt;&lt;/a&gt;4&lt;/h3&gt;&lt;p&gt;如何发起http请求？&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wx.request(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      url: &lt;span class=&quot;string&quot;&gt;&#39;http://news-at.zhihu.com/api/4/news/latest&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      header: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;Content-Type&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      success: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _this.setData(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          date: res.data.date,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          allStories: _this.data.allStories.concat(res.data),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          loading: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;打印结果&#39;&lt;/span&gt;+_this.data.allStories)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;返回结果&#39;&lt;/span&gt;+res)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;小程序中有一个对象&lt;code&gt;wx.request&lt;/code&gt; &lt;a href=&quot;https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html?t=1475052048561&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当返回数据之后用小程序中的Page上的setData属性赋值到&lt;code&gt;data&lt;/code&gt;当中。&lt;a href=&quot;https://mp.weixin.qq.com/debug/wxadoc/dev/framework/app-service/page.html?t=1475212238291&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文档地址&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;5&quot;&gt;&lt;a href=&quot;#5&quot; class=&quot;headerlink&quot; title=&quot;5&quot;&gt;&lt;/a&gt;5&lt;/h3&gt;&lt;p&gt;在编写小程序的过程中记得不要忘记在&lt;code&gt;app.json&lt;/code&gt;中注册你所需要的页面。因为有很多不知原因的问题可以是你这里的疏忽所导致的。当你没有注册页面的时候html会正常运行，但是js的逻辑却失效了。&lt;/p&gt;
&lt;p&gt;看到下面的警告的时候你就应该注意是这个问题了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Page[page/page-detail/page-detail] not found. May be caused by: 1. Forgot to add page route in app.json. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;（未完）&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近微信小程序刚出来，挺火的，自己也准备尝试一下。文档什么的官方都已经提供而且很全面了，所以不准备介绍小程序呢的用法。&lt;/p&gt;
&lt;p&gt;来总结一下自己在尝试微信小程序时遇到的一些需要注意的地方吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=
    
    </summary>
    
      <category term="微信小程序" scheme="http://www.yatessss.com/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="微信小程序" scheme="http://www.yatessss.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>https有关的一些事</title>
    <link href="http://www.yatessss.com/2016/08/05/%E5%92%8Chttps%E6%9C%89%E5%85%B3%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B.html"/>
    <id>http://www.yatessss.com/2016/08/05/和https有关的一些事.html</id>
    <published>2016-08-04T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;今天技术开了一次分享会，主要是分享了http和https相关的一些知识。&lt;/p&gt;
&lt;p&gt;其中很多知识了解，但是不是特别清楚，听完了对https更清楚了一些。&lt;/p&gt;
&lt;p&gt;https其实就是在http协议的基础上多添加了一层加密传输层。一般采用TLS（SSL会有缺陷），其实TLS和SSL说的是一个东西，就像ECMAScript和JavaScript一样，TLS是规范化的SSL协议，比SSL更安全。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_08_pic_QQ20160808-0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;TLS过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先客户端会发起第一次请求，告知服务器支持的协议版本、支持的加密算法、和一个随机数。&lt;/li&gt;
&lt;li&gt;服务器会根据客户端的请求，选择合适的协议和加密算法，然后传递给客户端第二个随机数，还有服务器的证书（其中有公钥）。&lt;/li&gt;
&lt;li&gt;客户端会使用服务端的公钥进行加密传输第三个随机数，通知服务端改变编码规则（使用加密编码），结束握手通知。&lt;/li&gt;
&lt;li&gt;服务端很根据三个随机数生成一个秘钥，然后告诉客户端改变编码规则（，结束握手通知。&lt;/li&gt;
&lt;li&gt;客户端和服务端使用对称加密开始传输数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其中要注意的就是：客户端和服务端都会有这三个随机数，因为客户端告诉了服务端支持哪些加密算法，所以客户端和服务端都用相同的算法把三个随机数生成一个对称秘钥，然后开始使用对称秘钥加密进行传输。&lt;/p&gt;
&lt;p&gt;那如何来保证安全呢？答案就在第三个随机数上。&lt;/p&gt;
&lt;p&gt;因为客户端最后传给服务端的第三个随机数是用服务端的公钥加密过的，所以理论上只有服务端才能解密第三个随机数，进而生成的对称秘钥只有双方知道。&lt;/p&gt;
&lt;p&gt;那如果在传输中间被劫持了，在传输第三个随机数的时候：劫持者把服务器的公钥劫持后换成自己的公钥发给客户端，客户端用劫持者的公钥加密了第三个随机数传给服务端，然后劫持者解密后，再用劫持到的真正服务器的公钥加密后传回给服务器，这样不就拿到了三个随机数，和加密规则。那后面的加密算法都无效了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;客户端&amp;lt;————攻击者&amp;lt;————服务端&lt;br&gt;  &amp;emsp; &amp;emsp; &amp;emsp;伪造证书 &amp;emsp; &amp;emsp; &amp;emsp;拦截请求&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以这就是证书的用途了。为什么服务器不直接传递公钥而是传递了一个带有公钥的证书，就是为了防止上述问题的发生。证书是由CA来颁发的（一个专门颁发数字证书的机构）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数字证书的颁发过程：&lt;/p&gt;
&lt;p&gt;用户首先产生自己的密钥对，并将公共密钥及部分个人身份信息传送给认证中心。认证中心在核实身份后，将执行一些必要的步骤，以确信请求确实由用户发送而来，然后，认证中心将发给用户一个数字证书，该证书内包含用户的个人信息和他的公钥信息，同时还附有认证中心的签名信息(根证书私钥签名)。用户就可以使用自己的数字证书进行相关的各种活动。数字证书由独立的证书发行机构发布，数字证书各不相同，每种证书可提供不同级别的可信度。&lt;/p&gt;
&lt;p&gt;浏览器默认都会内置CA根证书，其中根证书包含了CA的公钥&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;证书颁发的机构是伪造的：浏览器不认识，直接认为是危险证书&lt;/li&gt;
&lt;li&gt;证书颁发的机构是确实存在的，于是根据CA名，找到对应内置的CA根证书、CA的公钥。用CA的公钥，对伪造的证书的摘要进行解密，发现解不了，认为是危险证书。&lt;/li&gt;
&lt;li&gt;对于篡改的证书，使用CA的公钥对数字签名进行解密得到摘要A，然后再根据签名的Hash算法计算出证书的摘要B，对比A与B，若相等则正常，若不相等则是被篡改过的。&lt;/li&gt;
&lt;li&gt;证书可在其过期前被吊销，通常情况是该证书的私钥已经失密。较新的浏览器如Chrome、Firefox、Opera和Internet Explorer都实现了在线证书状态协议（OCSP）以排除这种情形：浏览器将网站提供的证书的序列号通过OCSP发送给证书颁发机构，后者会告诉浏览器证书是否还是有效的。&lt;/li&gt;
&lt;li&gt;1、2点是对伪造证书进行的，3是对于篡改后的证书验证，4是对于过期失效的验证。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面部分来自&lt;a href=&quot;http://www.wxtlife.com/2016/03/27/%E8%AF%A6%E8%A7%A3https%E6%98%AF%E5%A6%82%E4%BD%95%E7%A1%AE%E4%BF%9D%E5%AE%89%E5%85%A8%E7%9A%84%EF%BC%9F/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;详解https是如何确保安全的？&lt;/a&gt;，因为CA认证这部分理论很多，我自己叙述起来也不会很清楚。&lt;/p&gt;
&lt;p&gt;不过有一点可以说明，就是CA证书认证的时候会有签名，这个签名是用服务器自己的私钥来签名的，这样CA根据服务器的公钥就能解密签名。判断这确实是这对公私钥的持有者。（因为私钥被认为只有自己持有没有被泄露）。&lt;/p&gt;
&lt;p&gt;这样有了CA在中间的保证，没有中间劫持者来劫持掉证书，这个证书是安全的合法的。所以认为这个https链接也是安全的。&lt;/p&gt;
&lt;p&gt;为什么charles可以抓包https？&lt;/p&gt;
&lt;p&gt;其实charles就是上面所说的中间劫持者。他抓包的过程其实就是一个中间劫持转发的过程。因为在charles解密https之前，必须得在手机上装一个证书。这个其实就是charles的证书。因为这个证书不被CA所认可的（认为是非法的证书）所以手机默认其实是不带有这个证书的。&lt;/p&gt;
&lt;p&gt;你在手机上装了这个证书，就是承认的他的合法性和安全性，所以中间劫持了用了charles的公钥加密了你也认为没有问题。&lt;/p&gt;
&lt;p&gt;当然这是在我们调试的时候，其实普通用户使用时是没有安装charles的证书的，所以当charles抓包普通用户的时候（中间劫持，使用charles的证书），普通用户认为这个证书是不合法的危险的，就是提示出来（微信浏览器默认拒绝不安全的https）。所以这样看来https是很安全的传输协议。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天技术开了一次分享会，主要是分享了http和https相关的一些知识。&lt;/p&gt;
&lt;p&gt;其中很多知识了解，但是不是特别清楚，听完了对https更清楚了一些。&lt;/p&gt;
&lt;p&gt;https其实就是在http协议的基础上多添加了一层加密传输层。一般采用TLS（SSL会有缺陷），其实
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="工作总结" scheme="http://www.yatessss.com/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>一个前端的工作方法总结</title>
    <link href="http://www.yatessss.com/2016/08/01/%E4%B8%80%E4%B8%AA%E5%89%8D%E7%AB%AF%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.yatessss.com/2016/08/01/一个前端的工作方法总结.html</id>
    <published>2016-07-31T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;进入前端也半年多了，在工作中也学到了一些帮助自己提高工作效率的工具、方法，和大家分享一下，知识需要慢慢的积累，光读文章是不够的需要结合平时的实践才能融会贯通，这篇文章不会涉及很多知识，会分享一些平时工作中用到的工具、方法，主要偏向于移动端的开发方面。&lt;/p&gt;
&lt;h3 id=&quot;跨域问题&quot;&gt;&lt;a href=&quot;#跨域问题&quot; class=&quot;headerlink&quot; title=&quot;跨域问题&quot;&gt;&lt;/a&gt;跨域问题&lt;/h3&gt;&lt;p&gt;平时在调试接口的时候，难免会碰到一系列问题，因为在本地调试的时候和线上会有不同，可能会碰到跨域，和未登录的问题。&lt;/p&gt;
&lt;p&gt;跨协议、主域、子域、端口号都算跨域。具体的很多文章都讲的很详细。通常我们解决跨域使用jsonp、后端加跨域头，这两种需要后端来配合完成，还有是通过iframe来跨域。这是我们在生产时用到的办法。&lt;/p&gt;
&lt;p&gt;但是在开发的时候我们总不可能让后端同学加一个本地的跨域头把。。。jsonp是可以的，但是如果暂时后端没有配合，我们本地开发也可以用一些简单的方法来实现：&lt;br&gt;我们可以使用浏览器插件：&lt;em&gt;Allow-Control-Allow-Origin:** ，这个插件会转发请求，然后在请求头中加上`Allow-Control-Allow-Origin: &lt;/em&gt;`（插件名字简单粗暴），这样就可以使请求跨域了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;cookie问题&quot;&gt;&lt;a href=&quot;#cookie问题&quot; class=&quot;headerlink&quot; title=&quot;cookie问题&quot;&gt;&lt;/a&gt;cookie问题&lt;/h3&gt;&lt;p&gt;像平常不知道大家会不会遇到这样的情况：在联调的时候会需要不同状态的账号切换，来看前端页面展示的不同状态是不是正常的。&lt;/p&gt;
&lt;p&gt;这时通过两个插件配合就可以比较方便的解决类似的问题：ModHeader和EditThisCookie。&lt;/p&gt;
&lt;p&gt;通过EditThisCookie来取出页面中我们需要的cookie。通过ModHeader来设置请求头加上cookie的字段。&lt;/p&gt;
&lt;p&gt;这样首先通过登录不同的账号取到不同的cookie：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_08_pic_QQ20160802-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后把他加到ModHeader的请求头中：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_08_pic_QQ20160802-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过勾选不同的cookie来切换账号就可以解决上述的问题了。&lt;/p&gt;
&lt;p&gt;其实ModHeader也可以实现跨域。因为他可以加返回头，在返回头中加入跨域的头&lt;code&gt;Access-Control-Allow-Origin: *&lt;/code&gt;就可以实现跨域了。&lt;/p&gt;
&lt;p&gt;因为ModHeader可以加请求头和返回头，所以它的功能不仅仅如此，大家可以尝试着使用它。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;接口调试&quot;&gt;&lt;a href=&quot;#接口调试&quot; class=&quot;headerlink&quot; title=&quot;接口调试&quot;&gt;&lt;/a&gt;接口调试&lt;/h3&gt;&lt;p&gt;如果后台已经开发完接口，就配合跨域应该就可以了。&lt;/p&gt;
&lt;p&gt;平常经常会碰到前后端已经约定好字段了或者文档已经有了，但是后台接口还没有开发完成，所以这时候需要我们自己来mock数据。&lt;/p&gt;
&lt;p&gt;不知道大家平时是怎么mock数据的，第一开始我知道的是mock.js这个库，用这个库可以造出想要的字段和格式，而且字段都是随机的挺方便的，但是也需要学习一下。&lt;/p&gt;
&lt;p&gt;直到有一天，我发现有人直接在ajax中直接请求了一个json文件（可能大家早已经知道了。。。），我发现这种方式真的很方便，直接把文档复制过来就可以了，还可以根据自己的需求来更改字段方便调试。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//mock.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;resperr&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;respcd&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;0000&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;respmsg&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;cur_pt&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;diff_exchange&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;exchange_pt&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;shopname&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;伏牛堂&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;addr&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;望京SOHO&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;start_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-01-01 00:00:00&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;expire_time&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2016-01-02 23:59:59&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;state&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;status&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;goods_name&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;鸡丝大凉面一份&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;goods_amt&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;2000&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;obtain_amt&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;obtain_limit&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;activity_id&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;exchange&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;另外这个npm包也不错的&lt;a href=&quot;https://github.com/typicode/json-server&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JSON Server&lt;/a&gt;，JSON Server可以起一个类似api的服务。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;CSS兼容前缀&quot;&gt;&lt;a href=&quot;#CSS兼容前缀&quot; class=&quot;headerlink&quot; title=&quot;CSS兼容前缀&quot;&gt;&lt;/a&gt;CSS兼容前缀&lt;/h3&gt;&lt;p&gt;在开发移动端的时候会有&lt;code&gt;webkit&lt;/code&gt;兼容的问题，必须去写一些兼容的前缀。但是也有方法可以省去手动的添加，当然这也依赖构建的工具去实现。但是这样做也有不好的地方，就是我们总不去手写，就会不熟悉哪些属性需要去添加兼容，辩证来看吧。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer#webpack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;autoprefixer&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; autoprefixer = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;autoprefixer&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                test:   &lt;span class=&quot;regexp&quot;&gt;/\.css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                loader: &lt;span class=&quot;string&quot;&gt;&quot;style-loader!css-loader!postcss-loader&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    postcss: [ autoprefixer(&amp;#123; browsers: [&lt;span class=&quot;string&quot;&gt;&#39;last 2 versions&#39;&lt;/span&gt;] &amp;#125;) ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个网站也能去看浏览器的兼容性，&lt;a href=&quot;http://caniuse.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Can I use &lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;px转rem&quot;&gt;&lt;a href=&quot;#px转rem&quot; class=&quot;headerlink&quot; title=&quot;px转rem&quot;&gt;&lt;/a&gt;px转rem&lt;/h3&gt;&lt;p&gt;因为工作一直以来都是以移动端为主，移动端现在主流的解决方法就是配合flexible，css是使用rem单位来布局。&lt;/p&gt;
&lt;p&gt;从前。。。我是看着设计稿，比如如果设计稿是375的，我在写样式的时候比如200px，我就在拿计算器算：200/37.5*2 （dpr是2）然后算出来rem的值。。。。然后原来我就天天按计算器。&lt;/p&gt;
&lt;p&gt;直到有一天。。。我知道了可以在sass中写一个计算函数来进行计算：&lt;a href=&quot;http://www.w3cplus.com/preprocessor/sass-px-to-rem-with-mixin-and-function.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;具体链接&lt;/a&gt;如果懒得看我来贴出来：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@function pxTorem($px)&amp;#123;//$px为需要转换的字号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @return $px / $browser-default-font-size * 1rem;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$browser-default-font-size: 16px !default;//变量的值可以根据自己需求定义&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//SCSS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    font-size: $browser-default-font-size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.header &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    font-size: pxTorem(12px);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//CSS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;html &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  font-size: 16px; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.header &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  font-size: 0.75rem; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样是会简单一些，而现在呢直接使用webpack的插件可以直接在样式中写&lt;code&gt;px&lt;/code&gt;就可以了，然后构建的时候会自动转换为&lt;code&gt;rem&lt;/code&gt;，如果不想转换在样式后面跟&lt;code&gt;/*px*/&lt;/code&gt;就可以了。具体使用可以看下面链接：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package/postcss-px2rem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;postcss-px2rem&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//npm install postcss-loader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; px2rem = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;postcss-px2rem&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;.exports = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    loaders: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        test: &lt;span class=&quot;regexp&quot;&gt;/\.css$/&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        loader: &lt;span class=&quot;string&quot;&gt;&quot;style-loader!css-loader!postcss-loader&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  postcss: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [px2rem(&amp;#123;remUnit: &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;&amp;#125;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;压缩图片&quot;&gt;&lt;a href=&quot;#压缩图片&quot; class=&quot;headerlink&quot; title=&quot;压缩图片&quot;&gt;&lt;/a&gt;压缩图片&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://tinypng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tinypng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设计师和前端都会用到的一个超好用的图片压缩工具。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;代码规范&quot;&gt;&lt;a href=&quot;#代码规范&quot; class=&quot;headerlink&quot; title=&quot;代码规范&quot;&gt;&lt;/a&gt;代码规范&lt;/h3&gt;&lt;p&gt;可以使用eslint，&lt;a href=&quot;http://eslint.org/docs/rules/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;eslint&lt;/a&gt;，这样大家代码风格就一样了，刚开始使用的时候确实有不适应，但是慢慢就习惯了。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;ColorZilla&quot;&gt;&lt;a href=&quot;#ColorZilla&quot; class=&quot;headerlink&quot; title=&quot;ColorZilla&quot;&gt;&lt;/a&gt;ColorZilla&lt;/h3&gt;&lt;p&gt;这个插件可以在页面上取色，记录取色的历史，还可以生成渐变的css等等。不过平常用的可能还是取色功能吧~&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;网站配色&quot;&gt;&lt;a href=&quot;#网站配色&quot; class=&quot;headerlink&quot; title=&quot;网站配色&quot;&gt;&lt;/a&gt;网站配色&lt;/h3&gt;&lt;p&gt;配色是一门学问，在我们不了解设计的情况下可以使用这个网站来快速的找到合适的配色方案：&lt;a href=&quot;http://paletton.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://paletton.com/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Octotree&quot;&gt;&lt;a href=&quot;#Octotree&quot; class=&quot;headerlink&quot; title=&quot;Octotree&quot;&gt;&lt;/a&gt;Octotree&lt;/h3&gt;&lt;p&gt;不知道大家平常在浏览github时会不会有这样的情况：进入的目录深了之后，如果要返回之前的目录不是一直点浏览器的退后，就是点&lt;code&gt;../&lt;/code&gt;那个按钮，在同事那里看到了这个插件&lt;code&gt;Octotree&lt;/code&gt;，他在浏览器的左侧生成一个目录结构，类似于webstorm左侧一样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_08_pic_QQ20160802-0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样不管进入的目录有多深都可以一键返回主目录了，挺方便的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;WEB前端助手-FeHelper&quot;&gt;&lt;a href=&quot;#WEB前端助手-FeHelper&quot; class=&quot;headerlink&quot; title=&quot;WEB前端助手(FeHelper)&quot;&gt;&lt;/a&gt;WEB前端助手(FeHelper)&lt;/h3&gt;&lt;p&gt;这个工具是有一次看慕课网的视频看到的，然后自己就找到了用了一下主要包括有下面的功能：&lt;/p&gt;
&lt;p&gt;FE助手：包括字符串编解码、代码压缩、美化、JSON格式化、正则表达式、时间转换工具、二维码生成器、编码规范检测、页面性能检测、页面取色&lt;/p&gt;
&lt;p&gt;平常常用的可能是字符串编解码，时间转换，JSON格式化这几个因为别的有其他插件来代替的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;二维码-QR码-生成器-QR-Code-Generator&quot;&gt;&lt;a href=&quot;#二维码-QR码-生成器-QR-Code-Generator&quot; class=&quot;headerlink&quot; title=&quot;二维码(QR码)生成器(QR Code Generator)&quot;&gt;&lt;/a&gt;二维码(QR码)生成器(QR Code Generator)&lt;/h3&gt;&lt;p&gt;原来如果要手机调试页面的时候，我会这样做：把网址发到QQ或者微信上，然后再去打开网址。我估计和我这么蠢的人也不是很多了。&lt;/p&gt;
&lt;p&gt;安装这个插件后直接扫二维码进入就好了，方便了一些。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我深知一个人所了解到的是远远不够的，很多都是从同事或者网上学习到的。希望别的同学也可以不吝啬自己的小技巧，把大家平常工作中所用到的一些觉得很方便的方法、浏览器插件、代码库、webpack插件等等，只要可以提高效率都可以分享出来，可以在下面留言，我希望可以和大家一起学习进步。&lt;/p&gt;
&lt;p&gt;最后，分享一下自己前段时间写的一个vue小项目，&lt;a href=&quot;http://zhihudaily-vue.yatessss.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎日报移动web版&lt;/a&gt;，&lt;a href=&quot;https://github.com/yatessss/zhihudaily-vue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github地址&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;进入前端也半年多了，在工作中也学到了一些帮助自己提高工作效率的工具、方法，和大家分享一下，知识需要慢慢的积累，光读文章是不够的需要结合平时的实践才能融会贯通，这篇文章不会涉及很多知识，会分享一些平时工作中用到的工具、方法，主要偏向于移动端的开发方面。&lt;/p&gt;
&lt;h3 id=
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="工作总结" scheme="http://www.yatessss.com/tags/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>ES6模块化</title>
    <link href="http://www.yatessss.com/2016/07/28/ES6%E6%A8%A1%E5%9D%97%E5%8C%96.html"/>
    <id>http://www.yatessss.com/2016/07/28/ES6模块化.html</id>
    <published>2016-07-27T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;这几天在看vuex，模块引入这块看的有些迷，所以看了&lt;a href=&quot;http://es6.ruanyifeng.com/#docs/module&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮大大关于模块化这部分的教程&lt;/a&gt;。然后总结了一些常用的部分。&lt;/p&gt;
&lt;h3 id=&quot;export&quot;&gt;&lt;a href=&quot;#export&quot; class=&quot;headerlink&quot; title=&quot;export&quot;&gt;&lt;/a&gt;export&lt;/h3&gt;&lt;p&gt;输出可以有两种方式：第三种是用来重命名&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &amp;#123;m&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写法三&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &amp;#123;n &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; m&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;下面的写法是不对的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; m = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; m;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还要注意输出的接口与模块内部对应的值是一个动态绑定的关系：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout(() =&amp;gt; foo = &lt;span class=&quot;string&quot;&gt;&#39;baz&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码输出变量foo，值为bar，500毫秒之后变成baz。&lt;/p&gt;
&lt;h3 id=&quot;import&quot;&gt;&lt;a href=&quot;#import&quot; class=&quot;headerlink&quot; title=&quot;import&quot;&gt;&lt;/a&gt;import&lt;/h3&gt;&lt;p&gt;使用import来加载模块&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;firstName, lastName, year&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./profile&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以使用&lt;code&gt;as&lt;/code&gt;来更改引入模块的名字&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; lastName &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; surname &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./profile&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;整体引入模块而不是只引入模块的一部分，可以把模块内所有的方法依次引入，也可以用*来引入：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;area&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;radius&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI * radius * radius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;circumference&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;radius&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.PI * radius;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; circle &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./circle&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆面积：&#39;&lt;/span&gt; + circle.area(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;圆周长：&#39;&lt;/span&gt; + circle.circumference(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样所有引入模块的方法都挂载到了circle这个对象上面，只需要在&lt;code&gt;circle&lt;/code&gt;上取到对应的方法。&lt;/p&gt;
&lt;h3 id=&quot;ES6模块加载实质&quot;&gt;&lt;a href=&quot;#ES6模块加载实质&quot; class=&quot;headerlink&quot; title=&quot;ES6模块加载实质&quot;&gt;&lt;/a&gt;ES6模块加载实质&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;ES6模块加载的机制，与CommonJS模块完全不同。CommonJS模块输出的是一个值的拷贝，而ES6模块输出的是值的引用。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这句话很重要，CommonJS模块值一旦输出，内部的变化不会影响输出的值。因为他是一个值的拷贝。&lt;/p&gt;
&lt;p&gt;而ES6模块是生成一个动态的只读引用，这里有两个重点：动态引用、只读。&lt;/p&gt;
&lt;p&gt;动态，模块内部外部是会动态改变的。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; counter = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incCounter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  counter++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; counter, incCounter &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./lib&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter); &lt;span class=&quot;comment&quot;&gt;// 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incCounter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(counter); &lt;span class=&quot;comment&quot;&gt;// 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;只读，可以添加属性，但是不能重新赋值。类似于&lt;code&gt;const&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// lib.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; obj = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; obj &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./lib&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj.prop = &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj = &amp;#123;&amp;#125;; &lt;span class=&quot;comment&quot;&gt;// TypeError&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;export通过接口，输出的是同一个值。不同的脚本加载这个接口，得到的都是同样的实例。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// mod.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;C&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.add = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sum += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.show = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; c = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; C();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// x.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;c&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./mod&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.add();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// y.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123;c&amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./mod&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./x&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./y&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//执行main.js&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这就证明的是输出了同一个实例。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这几天在看vuex，模块引入这块看的有些迷，所以看了&lt;a href=&quot;http://es6.ruanyifeng.com/#docs/module&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮大大关于模块化这部分的教程&lt;/a&gt;。然后总结了一些常用的部分
    
    </summary>
    
      <category term="ES6" scheme="http://www.yatessss.com/categories/ES6/"/>
    
    
  </entry>
  
  <entry>
    <title>使用vue完成知乎日报web版</title>
    <link href="http://www.yatessss.com/2016/07/08/%E4%BD%BF%E7%94%A8vue%E5%AE%8C%E6%88%90%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5web%E7%89%88.html"/>
    <id>http://www.yatessss.com/2016/07/08/使用vue完成知乎日报web版.html</id>
    <published>2016-07-07T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;在线地址&quot;&gt;&lt;a href=&quot;#在线地址&quot; class=&quot;headerlink&quot; title=&quot;在线地址&quot;&gt;&lt;/a&gt;在线地址&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://zhihudaily-vue.yatessss.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;demo地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/yatessss/zhihudaily-vue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github地址&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;运行截图&quot;&gt;&lt;a href=&quot;#运行截图&quot; class=&quot;headerlink&quot; title=&quot;运行截图&quot;&gt;&lt;/a&gt;运行截图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picQQ20160708-13.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picQQ20160708-14.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picQQ20160708-15.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picQQ20160708-16.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;运行动图&quot;&gt;&lt;a href=&quot;#运行动图&quot; class=&quot;headerlink&quot; title=&quot;运行动图&quot;&gt;&lt;/a&gt;运行动图&lt;/h3&gt;&lt;p&gt;运行过程：首页–&amp;gt;轮播–&amp;gt;侧滑栏–&amp;gt;详情页–&amp;gt;分享–&amp;gt;评论页–&amp;gt;专栏列表–&amp;gt;详情页–&amp;gt;个人页–&amp;gt;更改为夜间模式–&amp;gt;运行–&amp;gt;主题日报&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picUntitled11.gif&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如需观看请在wifi下打开此地址&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;制作起因&quot;&gt;&lt;a href=&quot;#制作起因&quot; class=&quot;headerlink&quot; title=&quot;制作起因&quot;&gt;&lt;/a&gt;制作起因&lt;/h3&gt;&lt;p&gt;前段时间在github上看到了知乎日报的API和一个用vue制作的知乎日报，觉得自己也应该试着做一个用来练习练习vue。制作历时两周，基本上是仿照安卓版知乎日报的ui做的，功能上除了一些需要登录后完成的功能如评论点赞等，基本上都实现了。可能在不同手机浏览器里会出现不兼容的现象。在chrome中可以比较好的运行。&lt;/p&gt;
&lt;p&gt;下面就来介绍一下整个过程中，和遇到了哪些比较问题，是如何解决或者是变通的。&lt;/p&gt;
&lt;h3 id=&quot;过程&quot;&gt;&lt;a href=&quot;#过程&quot; class=&quot;headerlink&quot; title=&quot;过程&quot;&gt;&lt;/a&gt;过程&lt;/h3&gt;&lt;h4 id=&quot;项目搭建&quot;&gt;&lt;a href=&quot;#项目搭建&quot; class=&quot;headerlink&quot; title=&quot;项目搭建&quot;&gt;&lt;/a&gt;项目搭建&lt;/h4&gt;&lt;p&gt;使用的构建工具是webpack，但是我其实对构建项目上并没有很多经验，主要是应用了vue-cli这个脚手架工具，在vue-cli生成的项目的基础上做了一些小的修改，比如：因为是移动端的页面，用了flexible，所以加了postcss来处理px和rem之间的转换。&lt;/p&gt;
&lt;p&gt;项目目录基本维持了vue-cli的目录结构，只是多加了一个view目录来存放每个路由的页面，把跟路由直接写进了入口的html文件内。&lt;/p&gt;
&lt;h3 id=&quot;分析接口&quot;&gt;&lt;a href=&quot;#分析接口&quot; class=&quot;headerlink&quot; title=&quot;分析接口&quot;&gt;&lt;/a&gt;分析接口&lt;/h3&gt;&lt;p&gt;其中很主要的一个工作就是分析接口中返回数据的格式，因为有些接口可能会是同一个但是返回的数据接口可能是不一样的。&lt;/p&gt;
&lt;p&gt;比如：推荐者列表这个接口，有主编和没有主编的返回的数据接口是不一样的。&lt;/p&gt;
&lt;p&gt;比如：日报详情页面，首页日报和主题日报可能就是不一样的，有些主题日报并没有返回body这个字段，所以你需要判断如果没有body这个字段，就需要用一个iframe标签去加载share_url这个字段的地址去加载内容，否则页面显示就会是空白的。&lt;/p&gt;
&lt;p&gt;这样的情况有很多，接口的功能相同，但是返回的字段结构确是不同的，这时候就需要去分析每个接口，在布局方面注意想到不同情况下使展示方面不出现问题。&lt;/p&gt;
&lt;h4 id=&quot;流程问题&quot;&gt;&lt;a href=&quot;#流程问题&quot; class=&quot;headerlink&quot; title=&quot;流程问题&quot;&gt;&lt;/a&gt;流程问题&lt;/h4&gt;&lt;p&gt;另一个需要去想的就是使用流程方面的问题。&lt;/p&gt;
&lt;p&gt;比如，从列表页进入详情页返回时应该要回到当前列表的位置。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 判断从哪里来,如果是详情页就不重新请求,并返回上次列表位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (transition.from.name === &lt;span class=&quot;string&quot;&gt;&#39;detail&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         _this.$nextTick(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.document.body.scrollTop = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.sessionStorage.scrollTop&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         _this.getTheme()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.document.body.scrollTop = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进到列表页的可以从详情页返回到列表页，可以从侧边栏选择不同主题进到列表页，所以就需要判断，到底是从那个路由进来的，在不同路由时触发不同的动作。从详情页到列表页就应该回到上次的位置，从侧边栏进入就应该从新请求数据，并返回最顶部。&lt;/p&gt;
&lt;p&gt;再比如，有时下个页面会需要一些上个页面的数据，你通过哪种方式携带过去？是通过url，还是通过sessionStorage。&lt;/p&gt;
&lt;h4 id=&quot;布局&quot;&gt;&lt;a href=&quot;#布局&quot; class=&quot;headerlink&quot; title=&quot;布局&quot;&gt;&lt;/a&gt;布局&lt;/h4&gt;&lt;p&gt;主要用了flexible和flex的布局方案，flexible是因为是移动端页面，根据屏幕大小可以让盒子的尺寸适应屏幕，flex可能不是很兼容pc端一些低级浏览器，但是如果在移动端，基本都支持flex，用flex也可以免去浮动带来的一些特殊情况（比如改变webview的字体大小带来的浮动布局变乱），和绝对定位应用不灵活的缺点。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;h4 id=&quot;知乎的图片防盗链&quot;&gt;&lt;a href=&quot;#知乎的图片防盗链&quot; class=&quot;headerlink&quot; title=&quot;知乎的图片防盗链&quot;&gt;&lt;/a&gt;知乎的图片防盗链&lt;/h4&gt;&lt;p&gt;知乎的图片可能会通过请求头的referer参数判断，如果不是指定的域名会返回403，如果精通后台的同学，可以去访问这些图片来缓存这些图片，我是搜索到了一个相对简单一些的办法，&lt;a href=&quot;http://tangrui.win/2016/01/09/%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E8%BD%BB%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击链接&lt;/a&gt;，主要用到的是&lt;a href=&quot;https://images.weserv.nl/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Images.weserv.nl&lt;/a&gt;这个网站，可以缓存图片，而且可以修改图片的尺寸大小。&lt;/p&gt;
&lt;p&gt;具体是我自定义了一个过滤器，在需要用到地方，把知乎的url替换成这个图片代理网站的url，这样图片就可以显示了。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;exports.replaceUrl = (srcUrl) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; srcUrl.replace(&lt;span class=&quot;regexp&quot;&gt;/http\w&amp;#123;0,1&amp;#125;:\/\/p/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;https://images.weserv.nl/?url=p&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;知乎接口跨域问题&quot;&gt;&lt;a href=&quot;#知乎接口跨域问题&quot; class=&quot;headerlink&quot; title=&quot;知乎接口跨域问题&quot;&gt;&lt;/a&gt;知乎接口跨域问题&lt;/h4&gt;&lt;p&gt;接口跨域后浏览器是会禁止的，我试了一下jsonp，但是知乎的接口好像不支持jsonp。所以我们只能是在后台转发这个请求。我也是临时现学了一下nginx，用nginx起了一个服务，所有通过api.yatessss.com/news-at/xxxxxx的请求都会替换成&lt;a href=&quot;http://news-at.zhihu.com/xxxxxx。下面是nginx配置：&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://news-at.zhihu.com/xxxxxx。下面是nginx配置：&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listen       &lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        server_name  api.yatessss.com;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	location /news-at/&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    proxy_pass http:&lt;span class=&quot;comment&quot;&gt;//news-at.zhihu.com/;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    add_header Content-Type &lt;span class=&quot;string&quot;&gt;&quot;text/plain;charset=utf-8&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    add_header &lt;span class=&quot;string&quot;&gt;&#39;Access-Control-Allow-Origin&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;http://zhihudaily-vue.yatessss.com&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    add_header &lt;span class=&quot;string&quot;&gt;&#39;Access-Control-Allow-Credentials&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;true&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	    add_header &lt;span class=&quot;string&quot;&gt;&#39;Access-Control-Allow-Methods&#39;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一种方法是听同学说的，用fetch api不会出现跨域的问题，但是我自己没有试过，有兴趣的同学不妨去了解一下试一下。&lt;/p&gt;
&lt;p&gt;另另外一种方法，论坛上v友说的，可以用vue里config/index.js 里面的 proxyTable可以代理转发api，我没有试过，但是我觉得这个应该是最简单的方法了，我要去了解一下。&lt;/p&gt;
&lt;h4 id=&quot;组件复用问题&quot;&gt;&lt;a href=&quot;#组件复用问题&quot; class=&quot;headerlink&quot; title=&quot;组件复用问题&quot;&gt;&lt;/a&gt;组件复用问题&lt;/h4&gt;&lt;p&gt;虽说vue是可以组件化得，我在这里也用到了，但是组件化是一个需要考虑每个应用场景的，同一个组件在不同的view中，展示的会有不一样的地方，所以每种情况显示哪些内容都是需要考虑的。&lt;/p&gt;
&lt;p&gt;比如：列表页的每个话题栏&lt;code&gt;li&lt;/code&gt;，话题栏是一个组件，但是话题栏有些是没有图片的当没有图片时，你的话题栏&lt;code&gt;li&lt;/code&gt;的高度可以要自适应，如果多图图片右下角要给出提示。而进入到专栏列表时话题栏左下部需要有时间，而在平时是没有的这个也需要去注意。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_07_picQQ20160708-12.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;获取不到scrollTop的值&quot;&gt;&lt;a href=&quot;#获取不到scrollTop的值&quot; class=&quot;headerlink&quot; title=&quot;获取不到scrollTop的值&quot;&gt;&lt;/a&gt;获取不到scrollTop的值&lt;/h4&gt;&lt;p&gt;这个其实是css的问题，以前从来没有碰到过这样的问题。如果在给body设置了&lt;code&gt;overflow&lt;/code&gt;这个属性是scroll后就无法获取到scrollTop的值了，所以如果碰到上拉加载更多的时候要尤其注意一下这个问题。&lt;/p&gt;
&lt;p&gt;因为我会有一个蒙层，在蒙层出现的时候蒙层下方的列表就不能滑动了，在这里我是给body的&lt;code&gt;style&lt;/code&gt;加了一个&lt;code&gt;overflow：hidden&lt;/code&gt;这样一个属性。在蒙层消失后在改变为&lt;code&gt;overflow：auto&lt;/code&gt;所以才会出现我上述的这个问题。&lt;/p&gt;
&lt;p&gt;解决办法是使用添加移除class的方式来添加这个属性，或者是使用&lt;code&gt;overflow：initial&lt;/code&gt;这个属性。&lt;/p&gt;
&lt;h4 id=&quot;一些过滤器方面的积累&quot;&gt;&lt;a href=&quot;#一些过滤器方面的积累&quot; class=&quot;headerlink&quot; title=&quot;一些过滤器方面的积累&quot;&gt;&lt;/a&gt;一些过滤器方面的积累&lt;/h4&gt;&lt;p&gt;平时我们在完成工作的过程中，总会遇到后台返回的字符串可能会不太合心意，比如后台python返回给我们的时间戳是10位的，而js生成的是13位的。这就需要我们来处理一下了，另外时间戳的格式化也需要处理；一般后台传回来的金额都是以分为单位的，而一般前端展示是以元为单位的，所以也需要单位转换的方法。&lt;/p&gt;
&lt;p&gt;在我们平时的工作当中逐渐积累在遇到相同的问题时就会更加的得心应手了。&lt;/p&gt;
&lt;h4 id=&quot;动态修改header的title&quot;&gt;&lt;a href=&quot;#动态修改header的title&quot; class=&quot;headerlink&quot; title=&quot;动态修改header的title&quot;&gt;&lt;/a&gt;动态修改header的title&lt;/h4&gt;&lt;p&gt;app中列表页的header上的文字可以随着列表上拉，到相应的日期显示对应的文字，这个目前有一个解决的办法，是判断列表距离顶部的位置，当距离小于小于零的时候就去把他改变成对应的日期，主要用到的是&lt;code&gt;getBoundingClientRect&lt;/code&gt;这个api，他主要是可以获取选择元素位于当前视口的位置。具体可以看这个资料：&lt;a href=&quot;http://www.ruanyifeng.com/blog/2009/09/find_element_s_position_using_javascript.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用Javascript获取页面元素的位置&lt;/a&gt;。但是在iphone中会有在滚动时dom无法及时更新这个问题，搜索了一下暂时没找到解决办法。&lt;/p&gt;
&lt;h4 id=&quot;iphone在滚动时dom无法及时更新&quot;&gt;&lt;a href=&quot;#iphone在滚动时dom无法及时更新&quot; class=&quot;headerlink&quot; title=&quot;iphone在滚动时dom无法及时更新&quot;&gt;&lt;/a&gt;iphone在滚动时dom无法及时更新&lt;/h4&gt;&lt;p&gt;这里有两个答案：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10482227/javascript-dom-changes-in-touchmove-delayed-until-scroll-ends-on-mobile-safari&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript DOM changes in touchmove delayed until scroll ends on mobile Safari&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://segmentfault.com/q/1010000004453730&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动端onscroll事件在部分浏览器内不能实时触发&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;不足&quot;&gt;&lt;a href=&quot;#不足&quot; class=&quot;headerlink&quot; title=&quot;不足&quot;&gt;&lt;/a&gt;不足&lt;/h3&gt;&lt;p&gt;虽然完成了大多数功能，是其实可以优化的地方有很多，最大的优化点，没有使用vuex来管理数据状态，现在所有的都是耦合在项目里的，都是通过变量在组件当中互相传递状态的。因为我还没有学习vuex所以在这里就没有用到，在后面学习了vuex后，我会重新优化一下这个部分。&lt;/p&gt;
&lt;p&gt;没有加入手势功能，比如在侧边栏出现的时候，向左滑动来收起侧边栏比点击要自然很多，vue也专门有一个&lt;a href=&quot;https://github.com/vuejs/vue-touch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;手势功能的库&lt;/a&gt;，所以这个部分也是可以优化的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;在线地址&quot;&gt;&lt;a href=&quot;#在线地址&quot; class=&quot;headerlink&quot; title=&quot;在线地址&quot;&gt;&lt;/a&gt;在线地址&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://zhihudaily-vue.yatessss.com/&quot; target=&quot;_blank&quot; 
    
    </summary>
    
      <category term="vue" scheme="http://www.yatessss.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://www.yatessss.com/tags/vue/"/>
    
      <category term="知乎日报" scheme="http://www.yatessss.com/tags/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>使用vue完成上传文件页面</title>
    <link href="http://www.yatessss.com/2016/06/08/%E4%BD%BF%E7%94%A8vue%E5%AE%8C%E6%88%90%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E9%A1%B5%E9%9D%A2.html"/>
    <id>http://www.yatessss.com/2016/06/08/使用vue完成上传文件页面.html</id>
    <published>2016-06-07T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;需求描述&quot;&gt;&lt;a href=&quot;#需求描述&quot; class=&quot;headerlink&quot; title=&quot;需求描述&quot;&gt;&lt;/a&gt;需求描述&lt;/h3&gt;&lt;p&gt;最近加班加点完成了一个上传文件的需求，听起来很简单想着也很简单，但是知易行难实际操作起来，还是遇到了很多问题，现在就来总结一下，使用vue来构建一个上传文件的页面中会遇到哪些问题，其中的一些问题也可能是用别的框架也会遇到的问题。&lt;/p&gt;
&lt;p&gt;平台：主要是在安卓和苹果的微信webview中运行。&lt;/p&gt;
&lt;p&gt;先来看下主要的技术点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;父子组件的动态渲染&lt;/li&gt;
&lt;li&gt;初始化数据和判断数据&lt;/li&gt;
&lt;li&gt;input表单隐藏联动&lt;/li&gt;
&lt;li&gt;上传图片后可以预览&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;遇到的问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在iPhone中，click()事件无效&lt;/li&gt;
&lt;li&gt;在微信安卓webview中，img标签使用background属性无效&lt;/li&gt;
&lt;li&gt;预览上传图片保证宽高比&lt;/li&gt;
&lt;li&gt;在某些安卓机型用rem单位不显示边框&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;设计图大概是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_06_pic_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;完成后的效果是这样：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先登陆后，如果没有选择两个选项的话提交按钮点击不了并会有提示&lt;/li&gt;
&lt;li&gt;当选择图片后，下面会显示选择图片的缩略图&lt;/li&gt;
&lt;li&gt;当点击提交后，会显示loading成功后会刷新页面&lt;/li&gt;
&lt;li&gt;提交过的部分不会显示示意图会改为一张提示图片，刚上传过所有图片时会提示已经上传过所有图片&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xqch8.com1.z0.glb.clouddn.com/blog_2016_03_pic_2.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;大概就是这么一个步骤流程吧。&lt;/p&gt;
&lt;h3 id=&quot;技术点分析&quot;&gt;&lt;a href=&quot;#技术点分析&quot; class=&quot;headerlink&quot; title=&quot;技术点分析&quot;&gt;&lt;/a&gt;技术点分析&lt;/h3&gt;&lt;p&gt;这个页面主要使用的UI包括：提示、loading、选项栏等都是从WEUI样式库中扒出来的，因为是在微信公众号中使用的，体验上会一致。上传部分使用的是post表单上传，我把form表单隐藏了起来，通过模拟上传按钮，当点击上传按钮的时候同步触发表单中的input type=‘file’标签，调起原生的选择图片的界面，选择图片后，点击上传按钮的同时触发一个post请求把图片传到后台，完成整个功能。&lt;/p&gt;
&lt;h4 id=&quot;父子组件的动态渲染&quot;&gt;&lt;a href=&quot;#父子组件的动态渲染&quot; class=&quot;headerlink&quot; title=&quot;父子组件的动态渲染&quot;&gt;&lt;/a&gt;父子组件的动态渲染&lt;/h4&gt;&lt;p&gt;可以从设计图看出上传图片的部分基本上设计是一样的，所以用一个vue组件来复用是最好的，顺便说一下这个页面用到了三个组件，一个是dialog提示的组件，一个是loading的组件，还有一个就是上传这部分用到的组件。&lt;/p&gt;
&lt;p&gt;主要说一下上传部分的组件，在vue中，子父组件要传递的参数需要在子组件的props中声明，下面是我的组件中的模板，我主要用到了以下参数：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;com-box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;comTitle&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;com-title&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;comTitle&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;upload-box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;nameCn&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h2&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img-box&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#123;nameId&amp;#125;&amp;#125;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;:style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;bgUrl&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;img :src=&quot;imgUrl&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tip&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tip&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;#123;&amp;#123;tip&amp;#125;&amp;#125;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;div v-if=&quot;isUpload&quot; class=&quot;upload-btn upload-true&quot;&amp;gt;图片已提交&amp;lt;/div&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;v-if&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;!isUpload&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;upload-btn upload-false clickable-div&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;document.querySelector(&#39;input&#39;).click()&quot;&lt;/span&gt; @&lt;span class=&quot;attr&quot;&gt;click&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;inputBtn(name, $event)&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;上传图片&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;template&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* name：主要是让input表单和组件通过id产生关联&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* nameCn：组件的title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* imgUrl：（最后弃用但没有删掉）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* isUpload： 标识有没有上传，这个会在父组件中进行判断，如果已经上传了会把上传按钮隐藏掉&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* tip：图片下部的说明文字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* bgUrl：默认的说明背景图，上传完成后会在父组件中更改这个图片改成一张上传完成的提示图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;props: [&lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;nameCn&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;imgUrl&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;isUpload&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;tip&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;bgUrl&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;comTitle&#39;&lt;/span&gt;]，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;computed: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  nameId () &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name + &lt;span class=&quot;string&quot;&gt;&#39;content&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在父组件中我们可以引入这个组件，并声明它，然后在标签中把子组件需要用到的参数传递进去就好了。我这里是使用了&lt;code&gt;v-for&lt;/code&gt;去遍历了一个&lt;code&gt;result_data&lt;/code&gt;的数组，把所有需要上传的组件遍历渲染了出来。如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;upload v-for=&quot;(index, item) in result_data&quot; :name=&quot;item.name&quot; :name-cn=&quot;item.nameCn&quot; :bg-url=&quot;item.bgUrl&quot; :img-url=&quot;item.imgUrl&quot; :tip=&quot;item.tip&quot; :is-upload=&quot;item.isUpload&quot; :com-title=&quot;item.comTitle&quot;&amp;gt; &amp;lt;/upload&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  import upload from &#39;./upload.vue&#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  components: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      upload&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样子父组件就可以传递数据了，具体的大家可以去看一下官方的文档。&lt;/p&gt;
&lt;h4 id=&quot;初始化数据和判断数据&quot;&gt;&lt;a href=&quot;#初始化数据和判断数据&quot; class=&quot;headerlink&quot; title=&quot;初始化数据和判断数据&quot;&gt;&lt;/a&gt;初始化数据和判断数据&lt;/h4&gt;&lt;p&gt;这是这个任务里最坑的一个部分。因为后台只会把已经上传过图片的字段告诉我，所以我需要在前端去造一些初始化的数据，去和后台返回回来的比较，再去判断哪些上传过需要展示出来，那些没上传需要上传。&lt;/p&gt;
&lt;p&gt;注意：可以造数据的前提是，数据量不是很大，且数据是固定的。其实最好是后台可以完成这些判断，因为前端本就不应该去处理数据方面的逻辑。&lt;/p&gt;
&lt;p&gt;我初始化的数据大概是这个样子的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;init_data: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;shopphoto&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nameCn: &lt;span class=&quot;string&quot;&gt;&#39;店铺门头照片&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bgUrl: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      backgroundImage: &lt;span class=&quot;string&quot;&gt;&quot;url(&#39;http://near.m1img.com/op_upload/62/146502860635.jpg&#39;)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      backgroundSize: &lt;span class=&quot;string&quot;&gt;&#39;100% 100%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgUrl: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tip: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isUpload: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//          1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    name: &lt;span class=&quot;string&quot;&gt;&#39;goodsphoto&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    nameCn: &lt;span class=&quot;string&quot;&gt;&#39;店铺内景照片&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bgUrl: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      backgroundImage: &lt;span class=&quot;string&quot;&gt;&quot;url(&#39;http://near.m1img.com/op_upload/62/146502865726.jpg&#39;)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      backgroundSize: &lt;span class=&quot;string&quot;&gt;&#39;100% 100%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    imgUrl: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tip: &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isUpload: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后我去遍历后台返回的那个数组和我自己初始化得数组，用&lt;code&gt;name&lt;/code&gt;这个字段产生关联去比较，因为后台只返回了上传过图片的字段，所以我就可以判断出哪些是没有上传的部分。判断的逻辑如下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;compareArr (oldArr, newArr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _this = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _oldArr = oldArr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _newArr = newArr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len1 = _newArr.length; i &amp;lt; len1; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, len2 = _oldArr.length; j &amp;lt; len2; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_newArr[i].name === _oldArr[j].name) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; initData = _this.init_data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          initData[i].bgUrl = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backgroundImage: &lt;span class=&quot;string&quot;&gt;&quot;url(&#39;http://near.m1img.com/op_upload/62/146520417256.png&#39;)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backgroundSize: &lt;span class=&quot;string&quot;&gt;&#39;100% 100%&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          initData[i].isUpload = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          _this.$set(&lt;span class=&quot;string&quot;&gt;&#39;init_data&#39;&lt;/span&gt;, initData)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我会给这个方法传入两个数组。oldArr是后台的数组，newArr是我自己初始化的数组。&lt;br&gt;循环遍历比较两个数组，把我自己初始化的数据做出一些修改，主要是提示图片和是否上传标识字段的更改。&lt;/p&gt;
&lt;h4 id=&quot;input表单隐藏联动&quot;&gt;&lt;a href=&quot;#input表单隐藏联动&quot; class=&quot;headerlink&quot; title=&quot;input表单隐藏联动&quot;&gt;&lt;/a&gt;input表单隐藏联动&lt;/h4&gt;&lt;p&gt;这个逻辑也不是很复杂，就是在点击上传按钮的时候，调一个方法，在方法中选择到对应的&lt;code&gt;input&lt;/code&gt;标签出发一个&lt;code&gt;click()&lt;/code&gt;事件，主要是在iphone上面，可能会不支持input type=‘file’的标签，这里有一个坑，在网上找到了一些解决办法，但是试了一下没有效果，最后自己试验了一下找到了一个解决办法，在下面遇到的问题中会叙述。&lt;/p&gt;
&lt;p&gt;第二是要注意在form表单中要禁止事件冒泡，不然你点击一次input表单就会提交一次。&lt;/p&gt;
&lt;h4 id=&quot;上传图片后可以预览&quot;&gt;&lt;a href=&quot;#上传图片后可以预览&quot; class=&quot;headerlink&quot; title=&quot;上传图片后可以预览&quot;&gt;&lt;/a&gt;上传图片后可以预览&lt;/h4&gt;&lt;p&gt;可以我是汲取了广大人民的智慧。。。&lt;/p&gt;
&lt;p&gt;主要思路就是把图片读取成一个base64格式，然后再把他装到一个img标签中。实现预览功能，这里我给几个参考的资料，有的demo直接就可以跑，改一改就可以运用到自己的项目中。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/axes/p/4603984.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;移动前端—图片压缩上传实践&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gbtags.com/gb/share/2991.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用HTML5的两个api，前端js完成图片压缩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/wuweitiandian/article/details/46472017&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用HTML5 FILE API上传图片移动端缩略图兼容问题&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;大概看完他们的思路以后，就能够实现这个功能了，但是他并不能保持宽高比适配屏幕，后面我优化了一下这部分。&lt;/p&gt;
&lt;h3 id=&quot;遇到的问题&quot;&gt;&lt;a href=&quot;#遇到的问题&quot; class=&quot;headerlink&quot; title=&quot;遇到的问题&quot;&gt;&lt;/a&gt;遇到的问题&lt;/h3&gt;&lt;p&gt;遇到的这四个问题我们来一一解决：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在iPhone中，click()事件无效&lt;/li&gt;
&lt;li&gt;在微信安卓webview中，img标签使用background属性无效&lt;/li&gt;
&lt;li&gt;预览上传图片保证宽高比&lt;/li&gt;
&lt;li&gt;在某些安卓机型用rem单位不显示边框&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;在iPhone中click-事件无效&quot;&gt;&lt;a href=&quot;#在iPhone中click-事件无效&quot; class=&quot;headerlink&quot; title=&quot;在iPhone中click()事件无效&quot;&gt;&lt;/a&gt;在iPhone中click()事件无效&lt;/h4&gt;&lt;p&gt;这个问题在网上也有类似问题，&lt;a href=&quot;http://stackoverflow.com/questions/14795944/jquery-click-events-not-working-in-ios&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;地址&lt;/a&gt;，但是我依照网上的办法都不行，但是我发现显式的在标签内通过onclick=”document.querySelector(‘input’).click()这种方式是可以调用的，所以我把所有的我需要隐式调用input的地方都绑定了这个&lt;code&gt;onclick=&amp;quot;document.querySelector(&amp;#39;input&amp;#39;).click()&lt;/code&gt;，然后逻辑方面我又用vue的@click绑定了一个方法来处理逻辑方面。&lt;/p&gt;
&lt;h4 id=&quot;img标签使用background属性无效&quot;&gt;&lt;a href=&quot;#img标签使用background属性无效&quot; class=&quot;headerlink&quot; title=&quot;img标签使用background属性无效&quot;&gt;&lt;/a&gt;img标签使用background属性无效&lt;/h4&gt;&lt;p&gt;这个可能是安卓的微信webview支持的不好，因为在iphone和别的手机浏览器当中都可以支持，但是在安卓的微信webview不能显示，这个是兼容性的问题，所以最后我选择在&lt;code&gt;div&lt;/code&gt;中加background。&lt;/p&gt;
&lt;h4 id=&quot;预览上传图片保证宽高比&quot;&gt;&lt;a href=&quot;#预览上传图片保证宽高比&quot; class=&quot;headerlink&quot; title=&quot;预览上传图片保证宽高比&quot;&gt;&lt;/a&gt;预览上传图片保证宽高比&lt;/h4&gt;&lt;p&gt;这个其实也不难优化，因为上面的方法是把base64的图片放到一个img标签当中，所以没法去适配这个宽高比，如果把这个放到&lt;code&gt;div&lt;/code&gt;的&lt;code&gt;background-image&lt;/code&gt;属性当中，并把&lt;code&gt;background-size&lt;/code&gt;设置成&lt;code&gt;contain&lt;/code&gt;，把&lt;code&gt;background-color&lt;/code&gt;设置成页面背景一样的颜色，这样就能模拟出浏览图片的功能了。&lt;/p&gt;
&lt;h4 id=&quot;在某些安卓机型用rem单位不显示边框&quot;&gt;&lt;a href=&quot;#在某些安卓机型用rem单位不显示边框&quot; class=&quot;headerlink&quot; title=&quot;在某些安卓机型用rem单位不显示边框&quot;&gt;&lt;/a&gt;在某些安卓机型用rem单位不显示边框&lt;/h4&gt;&lt;p&gt;因为移动端使用的是rem为单位，用postcss去处理（就是在css中写px，后处理器去处理成rem），在1px时转换为rem单位可能不足屏幕显示的1px，则不会显示边框。解决办法就是当写&lt;code&gt;border&lt;/code&gt;时加注释去避免处理器去处理这句css（&lt;code&gt;/*px*/&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;整个过程大概就是这样吧，&lt;a href=&quot;https://github.com/yatessss/yatessss.github.io/tree/master/demo/supplement-information&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我把这个页面放到了github上&lt;/a&gt;，但是没有vue的环境跑不起来，如果有需要可以拷到自己vue项目下去尝试。代码垃圾，轻喷。。。。。。&lt;/p&gt;
&lt;p&gt;顺嘴说一句，那天晚上加班到两点，然后坐车回家，到地方付款的时候，发现银行维护没法付款，而且微信里也没有余额，正在想怎么办司机师傅说，没事赶紧回家吧等能付款的时候付了就好了，一句赶紧回家吧真实一阵感动啊。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;需求描述&quot;&gt;&lt;a href=&quot;#需求描述&quot; class=&quot;headerlink&quot; title=&quot;需求描述&quot;&gt;&lt;/a&gt;需求描述&lt;/h3&gt;&lt;p&gt;最近加班加点完成了一个上传文件的需求，听起来很简单想着也很简单，但是知易行难实际操作起来，还是遇到了很多问题，现在就来总结一
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="vue" scheme="http://www.yatessss.com/tags/vue/"/>
    
      <category term="文件上传" scheme="http://www.yatessss.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>webstorm项目下文件夹消失</title>
    <link href="http://www.yatessss.com/2016/05/17/webstorm%E9%A1%B9%E7%9B%AE%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E6%B6%88%E5%A4%B1.md.html"/>
    <id>http://www.yatessss.com/2016/05/17/webstorm项目下文件夹消失.md.html</id>
    <published>2016-05-16T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;大概情况就是webstorm打开项目后，文件夹都会消失，并且文件夹都会变到左上方，不会像正常情况一样，呈现一个树状的目录结构。&lt;a href=&quot;http://stackoverflow.com/questions/9302346/folders-missing-in-project-pane-in-webstorm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解决地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;具体办法就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cd&lt;/code&gt;进入项目当前的目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ls -a&lt;/code&gt;找到&lt;code&gt;.idea&lt;/code&gt;这个文件夹&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rm -r .idea&lt;/code&gt;删除这个文件夹&lt;/li&gt;
&lt;li&gt;重新打开项目就好啦~&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;大概情况就是webstorm打开项目后，文件夹都会消失，并且文件夹都会变到左上方，不会像正常情况一样，呈现一个树状的目录结构。&lt;a href=&quot;http://stackoverflow.com/questions/9302346/folders-missing-in-pro
    
    </summary>
    
      <category term="webstorm" scheme="http://www.yatessss.com/categories/webstorm/"/>
    
    
      <category term="webstorm" scheme="http://www.yatessss.com/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title>vue初体验</title>
    <link href="http://www.yatessss.com/2016/05/06/vue%E5%88%9D%E4%BD%93%E9%AA%8C.html"/>
    <id>http://www.yatessss.com/2016/05/06/vue初体验.html</id>
    <published>2016-05-05T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;最近QA提了一个问题，我原来做的&lt;a href=&quot;http://www.yatessss.com/2016/02/19/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93.html&quot;&gt;到账记录的页面&lt;/a&gt;从列表页点进详情页之后返回列表页的时候不能返回到之前进去的位置。当时写这个页面的时候也遇到了一些问题，具体可以看这里&lt;a href=&quot;http://www.yatessss.com/2016/02/19/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93.html&quot;&gt;到账记录的页面&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;因为当时做到账记录这个页面时是两个页面，列表页是通过接口的数据生成的，页面并不会缓存，进入详情页返回列表页时数据要重新请求，所以不能回到当时的位置。正好最近公司准备开始使用vue，所以我就用vue重构了这个页面，vue自带路由，因为是单页面所以列表页也可以保存起来。&lt;/p&gt;
&lt;p&gt;用了一次vue就会觉得他很方便，用vue就不需要再使用模板来渲染页面了，他自带过滤器功能在渲染模板的时候就可以过滤字符串，自带路由功能。&lt;/p&gt;
&lt;p&gt;先给出两个文档的地址，一个是&lt;a href=&quot;http://vuejs.org.cn/guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vue的文档&lt;/a&gt;，另一个是&lt;a href=&quot;http://vuejs.github.io/vue-router/zh-cn/basic.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;vue的官方路由组件的文档&lt;/a&gt;。这里写的非常的详细，在这里可以找到所有的答案。&lt;/p&gt;
&lt;p&gt;说说过程中的经验。&lt;/p&gt;
&lt;h3 id=&quot;vue在编写组件的时候，也支持使用模板。&quot;&gt;&lt;a href=&quot;#vue在编写组件的时候，也支持使用模板。&quot; class=&quot;headerlink&quot; title=&quot;vue在编写组件的时候，也支持使用模板。&quot;&gt;&lt;/a&gt;vue在编写组件的时候，也支持使用模板。&lt;/h3&gt;&lt;p&gt;在html中可以像用模板语言那样，写一个&lt;code&gt;script&lt;/code&gt;标签，定义一个&lt;code&gt;id&lt;/code&gt;，在这个标签内写相应的组件的html。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;list-template&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/x-template&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后在js的组件内引用这个模板就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; List = Vue.extend(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	template: &lt;span class=&quot;string&quot;&gt;&#39;#list-template&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;传递参数&quot;&gt;&lt;a href=&quot;#传递参数&quot; class=&quot;headerlink&quot; title=&quot;传递参数&quot;&gt;&lt;/a&gt;传递参数&lt;/h3&gt;&lt;p&gt;整个到账做成了一个页面，就会包含列表和详情两个组件。原来是两个页面的时候是使用url来传递参数（比如详情页要使用列表页的单号来请求后台接口），现在传递参数会有两种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;因为路由需要一个根组件，可以在根组件上定义一个变量，点击列表组件的时候把单号传到根组件的变量中，在详情组件中取根组件的这个变量，得到单号。&lt;/li&gt;
&lt;li&gt;就是用sessionStorage，在点击列表时绑定一个事件，把单号存到sessionStorage中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我是选择用第二种办法，因为他过程更方便，容易理解。在组件中都会有生命周期（可以看路由组件的文档），在组件创建的时候就从sessionStorage中取单号就可以了。&lt;/p&gt;
&lt;p&gt;需求中的列表返回到进入时的位置其实也是用sessionStorage实现的。&lt;/p&gt;
&lt;h3 id=&quot;下拉加载&quot;&gt;&lt;a href=&quot;#下拉加载&quot; class=&quot;headerlink&quot; title=&quot;下拉加载&quot;&gt;&lt;/a&gt;下拉加载&lt;/h3&gt;&lt;p&gt;使用的下拉加载和原来的页面没有区别，都是给window绑定一个监听事件，监听滚动条的高度判断是否到页面的底部，然后去加载列表。&lt;/p&gt;
&lt;p&gt;但是在单页面中，需要注意如果监听事件一直存在的话，进入详情页后下拉到底部还是会加载列表，所以在列表页的&lt;code&gt;deactivate&lt;/code&gt;的生命周期中需要把监听事件去掉，在&lt;code&gt;activate&lt;/code&gt;的时候再继续去监听。&lt;/p&gt;
&lt;h3 id=&quot;页面加载慢&quot;&gt;&lt;a href=&quot;#页面加载慢&quot; class=&quot;headerlink&quot; title=&quot;页面加载慢&quot;&gt;&lt;/a&gt;页面加载慢&lt;/h3&gt;&lt;p&gt;在进入详情页后，如果后台返回数据过多，页面渲染会很受影响，在性能比较差的手机上可能会导致卡死或者app崩溃。这是因为后台一次性返回的数据太多，当反应这个问题后，后台由于其他业务的关系不能添加分页的功能，但是由前端自己也可以实现分布加载数据的功能（当然这是在万不得已的情况下，其实最好还是做分页）。&lt;/p&gt;
&lt;p&gt;首先后台返回了一个很长的数组，我们需要的是把他缓存起来，首次渲染时只渲染一部分，在页面到达底部的时候再去加载。因为是单页面，不存在刷新的问题，所以把数据缓存在js的一个变量当中就可以了。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *detaillist: [], //整个列表缓存&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *load_list : [], //初次加载的列表&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *page_count: 30, // 分页大小&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *this_page: 0,   // 当前页&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pushData: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _this = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; len = _this.detaillist.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; _this.page_count &amp;amp;&amp;amp; (_this.load_list.length &amp;lt; len) ; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		_this.load_list.push(_this.detaillist[_this.page_count * _this.this_page + i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	_this.this_page++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个是详情页到底部时所执行的方法。有一点需要注意，就是在详情组件每次&lt;code&gt;activate&lt;/code&gt;的生命周期的时候，需要把数据都重置，因为如果没有重置数据的话，变量里保存的还是原来的数组，渲染页面时数据就不对了。重置可以先一个函数来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;init : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;monthfee&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;totalfee&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;totalmoney&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;feedetail&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;load_list&#39;&lt;/span&gt;, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;this_page&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.$set(&lt;span class=&quot;string&quot;&gt;&#39;detaillist&#39;&lt;/span&gt;, []);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;*这种方法有弊端，就是如果详情的数据特别特别多，这个页面就会越来越大，越来越卡，有另一种可以动态加载无限列表的库，&lt;a href=&quot;https://github.com/cubiq/iscroll&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iscroll-infinite.js&lt;/a&gt;，他可以不断的操作DOM来添加和删除列表。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近QA提了一个问题，我原来做的&lt;a href=&quot;http://www.yatessss.com/2016/02/19/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93.html&quot;&gt;到账记录的页面&lt;/a&gt;从列表页点进详情页之后返回列表页的时候不能返回
    
    </summary>
    
      <category term="vue" scheme="http://www.yatessss.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://www.yatessss.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>重排reflow与重绘repaint</title>
    <link href="http://www.yatessss.com/2016/04/29/%E9%87%8D%E6%8E%92reflow%E4%B8%8E%E9%87%8D%E7%BB%98repaint.html"/>
    <id>http://www.yatessss.com/2016/04/29/重排reflow与重绘repaint.html</id>
    <published>2016-04-28T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;重绘与重排&quot;&gt;&lt;a href=&quot;#重绘与重排&quot; class=&quot;headerlink&quot; title=&quot;重绘与重排&quot;&gt;&lt;/a&gt;重绘与重排&lt;/h3&gt;&lt;p&gt;最近看了一本书《高性能JavaScript》，里面有很多有用的代码片段，后面我准备把一些摘抄记录下来。&lt;/p&gt;
&lt;p&gt;今天主要想说说重绘与重排，这个也是《高性能JavaScript》中讲的一部分，我来总结一下吧。&lt;/p&gt;
&lt;p&gt;首先先要了解一下浏览器渲染页面的过程，当浏览器下载完页面所需要的html、css、js和图片等后就会开始解析并生成两个内部的数据结构：DOM树和渲染树。&lt;br&gt;DOM树是表示页面的结构，渲染树是表示DOM节点如何显示。&lt;/p&gt;
&lt;p&gt;DOM树不必多说，渲染树会结合DOM树和DOM节点对应的CSS样式去理解页面上每个元素的样式（比如内外边距，边框，位置等），去构建一个渲染树。渲染树完成后浏览器就开始绘制（paint）页面元素。&lt;/p&gt;
&lt;p&gt;关于这部分可以看这个链接&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction?hl=zh-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;渲染树构建、布局及绘制
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当DOM树的结构和CSS产生变化影响到页面布局或元素的几何属性的时候，浏览器会重新构建渲染树，重新构建渲染树的过程就叫做&lt;code&gt;重排（reflow）&lt;/code&gt;，重排完成后，浏览器会重新绘制受到影响的部分到屏幕中，这个过程叫做&lt;code&gt;重绘（repaint）&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;并不是所有的变化都会影响到页面布局和元素的几何属性（即发生重排），下面的情况会发生重排：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加和删除可见的DOM元素。&lt;/li&gt;
&lt;li&gt;元素位置改变。&lt;/li&gt;
&lt;li&gt;元素尺寸改变（内外边距，边框厚度，宽高等）。&lt;/li&gt;
&lt;li&gt;内容改变（文本改变，图片尺寸改变）。&lt;/li&gt;
&lt;li&gt;浏览器窗口尺寸变化。&lt;/li&gt;
&lt;li&gt;页面渲染器初始化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不改变页面布局和元素几何属性的变化（比如背景色变化），只会发生一次重绘，并不会发生重排。&lt;/p&gt;
&lt;h3 id=&quot;减少重绘与重排&quot;&gt;&lt;a href=&quot;#减少重绘与重排&quot; class=&quot;headerlink&quot; title=&quot;减少重绘与重排&quot;&gt;&lt;/a&gt;减少重绘与重排&lt;/h3&gt;&lt;p&gt;因为重绘和重排需要大量计算，会影响页面的响应速度，所以我们应该尽量减少和避免重绘和重排。&lt;/p&gt;
&lt;h4 id=&quot;改变样式&quot;&gt;&lt;a href=&quot;#改变样式&quot; class=&quot;headerlink&quot; title=&quot;改变样式&quot;&gt;&lt;/a&gt;改变样式&lt;/h4&gt;&lt;p&gt;看下面这段代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mydiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.borderLeft = &lt;span class=&quot;string&quot;&gt;&#39;1px&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.borderRight = &lt;span class=&quot;string&quot;&gt;&#39;2px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.padding = &lt;span class=&quot;string&quot;&gt;&#39;5px&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样添加样式，每一次都会改变元素的几何属性，在一些旧版浏览器中可能会引起三次重排（现代浏览器会做优化处理，发生一次重排），所以可以优化一下代码，合并样式一次性修改：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mydiv&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//替换样式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.cssText = &lt;span class=&quot;string&quot;&gt;&#39;border-left: 1px; border-right: 2px; padding: 5px;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//保留原有样式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;el.style.cssText += &lt;span class=&quot;string&quot;&gt;&#39;; border-left: 1px;&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样修改只会引起一次重排，更为高效。还有一种做法就是为想要修改的部分添加一个&lt;code&gt;class&lt;/code&gt;使用css一次性修改。&lt;/p&gt;
&lt;h4 id=&quot;批量修改DOM&quot;&gt;&lt;a href=&quot;#批量修改DOM&quot; class=&quot;headerlink&quot; title=&quot;批量修改DOM&quot;&gt;&lt;/a&gt;批量修改DOM&lt;/h4&gt;&lt;p&gt;如果我们需要对DOM进行一系列操作的时候，可以通过下面的做法来减少重绘和重排：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使元素脱离文档流。&lt;/li&gt;
&lt;li&gt;对其进行操作。&lt;/li&gt;
&lt;li&gt;把元素带回文档中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样如果我们在第二步进行多次操作时，也只会在第一步和第三步触发两次重排。&lt;/p&gt;
&lt;p&gt;有三种基本方法可以使DOM脱离文档流:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;隐藏元素，修改，重新显示。&lt;/li&gt;
&lt;li&gt;使用文档片断（document fragment），在当前DOM外构建一个子树，再把它插入文档中。&lt;/li&gt;
&lt;li&gt;把原始元素拷贝到脱离文档的节点中，修改后在把原始元素替换掉。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用代码来说明三种方法：&lt;/p&gt;
&lt;p&gt;比如现在我们有一个&lt;code&gt;ul&lt;/code&gt;列表，我们用一个方法&lt;code&gt;appendDataElement()&lt;/code&gt;往列表中添加&lt;code&gt;li&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//要操作的列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ul = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mylist&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//向列表中添加li，data是li中的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendDataToElement(ul, data);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果我们不使用任何方法的话，每插入一个&lt;code&gt;li&lt;/code&gt;就会触发一次重排，这样是很影响性能的。所以我们可以使用上面的三种方法。&lt;/p&gt;
&lt;p&gt;方法一：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ul = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mylist&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul.style.display = &lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendDataToElement(ul, data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ul.style.display = &lt;span class=&quot;string&quot;&gt;&#39;block&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法二：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fragment = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createDocumentFragment();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendDataToElement(fragment, data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mylist&#39;&lt;/span&gt;).appendChild(fragment);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法三：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; old = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;mylist&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; clone = old.cloneNode(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;appendDataToElement(clone, data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;old.parentNode.replaceChild(clone, old);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;文章中是推荐我们使用第二种方法，因为这种方法本来设计的初衷就是为了解决这类任务的（更新和移动节点）。而且这种方法只触发一次重拍，只访问一次DOM节点。&lt;/p&gt;
&lt;p&gt;既然说到了重绘和重排，顺便就说一下动画，在动画中我们可以尽量使用&lt;code&gt;transform&lt;/code&gt;和&lt;code&gt;opacity&lt;/code&gt;，因为他们会不会触发重绘。具体可以看看这两篇文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS动画之硬件加速&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zencode.in/14.CSS%E5%8A%A8%E7%94%BB%E7%9A%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSS动画的性能优化&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;重绘与重排&quot;&gt;&lt;a href=&quot;#重绘与重排&quot; class=&quot;headerlink&quot; title=&quot;重绘与重排&quot;&gt;&lt;/a&gt;重绘与重排&lt;/h3&gt;&lt;p&gt;最近看了一本书《高性能JavaScript》，里面有很多有用的代码片段，后面我准备把一些摘抄记录下来。&lt;/p&gt;
&lt;p
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.yatessss.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://www.yatessss.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>《JavaScript高级程序设计》读书笔记</title>
    <link href="http://www.yatessss.com/2016/04/18/%E3%80%8AJavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0.html"/>
    <id>http://www.yatessss.com/2016/04/18/《JavaScript高级程序设计》读书笔记.html</id>
    <published>2016-04-17T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在复习《JavaScript高级程序设计》，然后记一些自己原来不懂的地方吧，不会整个总结，就是按知识点一个一个把新学到的列出来。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JavaScript = ECMAScript + DOM + BOM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在html中可以用&lt;code&gt;&amp;lt;noscript&amp;gt;&lt;/code&gt;的标签，在这个标签内写的html内容，会在浏览器不支持脚本或者浏览器禁用脚本的时候显示出来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript的变量是区分大小写的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;isFinite()函数可以确定一个数值是不是有穷的即在不在浏览器支持的最大值和最小值之间，如果是就会返回&lt;code&gt;true&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Number()􏰟parseInt()􏰠和parseFloat()，第一个可以把任何类型转换为数值，另外两个可以把字符串转换为数值。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;转换为字符串有两种方式：toString()和String()。toString()方法可带参数表示输出数值的基数，但不能转换undefined和null；String()方法的规则是：有toString()方法调用toString()，如果是undefined和null则返回相应字符串。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每个创建的对象实例都有下列方法和属性：constructor，hasOwnProperty，isPrototypeOf，propertyIsEnumerable，toLocaleString()，toString()，valueOf()。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;复制基本类型的变量值得时候会复制出一个副本（互相不会影响），而复制一个对象类型的时候会添加一个指针而已（修改一个会影响另一个）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;确定一个值是那种基本类型用&lt;code&gt;typeof&lt;/code&gt;，确定值是哪一种引用类型用&lt;code&gt;instanceof&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过&lt;code&gt;[]&lt;/code&gt;来访问对象属性的时候，&lt;code&gt;[]&lt;/code&gt;中可以是变量，也可以是非字母非数字的属性名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;arguments.callee是一个指向正在执行函数的指针，在递归当中可以应用。（在严格模式中这个不可以用，可以用一个命名函数表达式，&lt;code&gt;var a = (function b (){})&lt;/code&gt;）在函数中调用&lt;code&gt;b&lt;/code&gt;这个函数名。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;var&lt;/code&gt;定义在全局的变量其实是window下的一个属性，他的Configurable属性设为了false（不可配置的），所以不能用delete删除掉。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;每个框架有自己的window，top对象指向对外层框架，也就是浏览器窗口。&lt;/li&gt;
&lt;li&gt;BOM中window.moveBy、window.moveTo、window.resizeTo、window.resizeBy这些方法在浏览器默认是禁用的，且只作用于最外层窗口对象。&lt;/li&gt;
&lt;li&gt;浏览器有三种提示框alert()（只有确认键）、confirm()（有确认和取消键）和prompt()（除了确认取消还有输入框）。&lt;/li&gt;
&lt;li&gt;一个页面的两个框架如果是不同子域将无法通信，可以将document.domain设置为同一个主域名，他们之间就可以互相通信了。（有限制，只可以从紧绷&lt;code&gt;p2p.wrox.com&lt;/code&gt;向松散&lt;code&gt;wrox.com&lt;/code&gt;改变，反之不可）。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在复习《JavaScript高级程序设计》，然后记一些自己原来不懂的地方吧，不会整个总结，就是按知识点一个一个把新学到的列出来。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;JavaScript = ECMAScript + DOM + BOM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.yatessss.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://www.yatessss.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>WebStorage</title>
    <link href="http://www.yatessss.com/2016/04/15/WebStorage.html"/>
    <id>http://www.yatessss.com/2016/04/15/WebStorage.html</id>
    <published>2016-04-14T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;接着上周那个获取地理位置的功能继续说，上周JSSDK注册是成功了，但是又发现了另一个bug，如果一个未登陆过的用户从分享链接登录会报错误，state参数过长，登录失败。&lt;/p&gt;
&lt;p&gt;这个bug出现的原因是在后台，因为后台代替前端去调微信授权的接口，取到code后再去种session到前端的这个页面，后台会携带一些参数在state这个字段中，但微信state字段最大支持128字节，超出这个最大限制后就会报错了。&lt;/p&gt;
&lt;p&gt;*我不太清楚在state字段中带参数的原因，但是听他们讨论大概是因为需要跨域去传递一些东西，所以要在state字段中传递参数。&lt;/p&gt;
&lt;p&gt;后来就改变了注册的方式，原来是后台去代替前端去调微信授权的接口，现在改为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先如果我检测到没有session的话，我会去调微信授权的接口，回调域写我本身，这样通过授权后跳回到页面url后面会带一个code的参数。&lt;/li&gt;
&lt;li&gt;拿着url后code这个参数，再去请求后台的接口，后台接收两个参数：一个code和回调的url。&lt;/li&gt;
&lt;li&gt;把code和回调的url（还是我页面本身）传到后台，后台就会在应答头中把session给我带回到页面中。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Storage&quot;&gt;&lt;a href=&quot;#Storage&quot; class=&quot;headerlink&quot; title=&quot;Storage&quot;&gt;&lt;/a&gt;Storage&lt;/h3&gt;&lt;p&gt;由前端来处理的时候，可能会用到一样东西就是本地储存，为什么会用到？因为我们在调两个接口的时候回调的url都是同一个（即最初页面的url，而不是携带code参数的url），而如果页面重新加载后js会重新执行，并不能缓存一些参数，如果你使用&lt;code&gt;location.href&lt;/code&gt;来取url的话，不能保证这个url是一致的，当然也可以通过js处理来把后面不需要的参数去掉，但是那么做显然会繁琐一些。&lt;/p&gt;
&lt;p&gt;如果用到本地存储的话，我们可以把要用到的url存储在本地，当页面再次加载是从Storage中读取那个想要的url就可以了。&lt;/p&gt;
&lt;p&gt;我是这么做的：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; code = util.getQuery(location.href).code;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(util.Cookie.get(&lt;span class=&quot;string&quot;&gt;&#39;sessionid&#39;&lt;/span&gt;) == &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!code)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    localStorage.redirect_uri = &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(location.href);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location.href = &lt;span class=&quot;string&quot;&gt;&#39;https://o2.qfpay.com/trade/wechat/v1/get_weixin_code?appid=wxeb6e671f5571abce&amp;amp;redirect_uri=&#39;&lt;/span&gt;+localStorage.redirect_uri+&lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;response_type=code&amp;amp;scope=snsapi_userinfo&amp;amp;state=STATE#wechat_redirect&#39;&lt;/span&gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    location.href = config.host + &lt;span class=&quot;string&quot;&gt;&#39;wx_callback?redirect_url=&#39;&lt;/span&gt; + localStorage.redirect_uri + &lt;span class=&quot;string&quot;&gt;&#39;&amp;amp;code=&#39;&lt;/span&gt; + code;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先我会判断url中有没有code，如果没有那说明这个url是没有经过微信授权的那个url，我就会把这个url写到localStorage中。如果有code，我就把code连同要回调的url传到后台接口去。&lt;/p&gt;
&lt;p&gt;主要是介绍一下localStorage和sessionStorage：（参考犀牛书）&lt;/p&gt;
&lt;p&gt;localStorage和sessionStorage都是用来存储数据的属性，两者的区别在于存储的有效期和作用域的不同：数据可以存储多长时间以及谁拥有数据的访问权。&lt;/p&gt;
&lt;h4 id=&quot;有效期&quot;&gt;&lt;a href=&quot;#有效期&quot; class=&quot;headerlink&quot; title=&quot;有效期&quot;&gt;&lt;/a&gt;有效期&lt;/h4&gt;&lt;p&gt;localStorage存储的数据是永久性的，除非刻意的去删除存储的数据（浏览器的清除功能等），否则数据一直保留永不过期。&lt;/p&gt;
&lt;p&gt;sessionStorage存储的数据是暂时性的，如果当前窗口或者标签页被永久关闭了，通过当前页sessionStorage存储的数据就会被删除掉。（现在浏览器有恢复最近关闭的标签页的功能，所以sessionStorage得有效期可能会长一些）。&lt;/p&gt;
&lt;h4 id=&quot;作用域&quot;&gt;&lt;a href=&quot;#作用域&quot; class=&quot;headerlink&quot; title=&quot;作用域&quot;&gt;&lt;/a&gt;作用域&lt;/h4&gt;&lt;p&gt;localStorage的作用域是同文档源，文档源由协议、主机名和端口确定的，三个当中任意一个不同都不属于同文档源。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http:&lt;span class=&quot;comment&quot;&gt;//www.example.com  //协议：http；主机名：www.example&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同源的文档间可以共享localStorage数据，并且可以互相读写，反之则不可以。但是注意localStorage的作用域也受浏览器的限制，不同浏览器只能访问本浏览器localStorage存储的数据。&lt;/p&gt;
&lt;p&gt;sessionStorage除了遵循上面的同源策略之外，作用域还被限制在窗口的标签页中。两个不同的标签页各自拥有各自的sessionStorage数据不能共享，就算两个标签页渲染的是同一个页面运行同一个脚本也不可以。&lt;/p&gt;
&lt;p&gt;如果一个标签页包含两个&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;的话，如果它们所包含的文档是同源的，两者的sessionStorage是可以共享的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;localStorage和sessionStorage目前只支持存储字符串类型的数据。存储其他类的话需要自己进行编码和解码。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//读写数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(localStorage.x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//读写日期&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.lastRead = (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;()).toUTCString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastRead = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;.parse(localStorage.lastRead));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//读写JSON&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.data = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(data);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(localStorage.data);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;localStorage和sessionStorage除了可以通过设置属性和查询属性来读写之外，也有正式的API。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;localStorage.setItem(&lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;value&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//以“key”为名称存储一个值“value”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.getItem(&lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//获取名称为“key”的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//枚举localStorage的方法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;localStorage.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = localStorage.key(i)​;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; value = localStorage.getItem(name);​&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//删除localStorage中存储信息的方法：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.removeItem(&lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//删除名称为“key”的信息。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;localStorage.clear();​&lt;span class=&quot;comment&quot;&gt;//清空localStorage中所有信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;接着上周那个获取地理位置的功能继续说，上周JSSDK注册是成功了，但是又发现了另一个bug，如果一个未登陆过的用户从分享链接登录会报错误，state参数过长，登录失败。&lt;/p&gt;
&lt;p&gt;这个bug出现的原因是在后台，因为后台代替前端去调微信授权的接口，取到code后再去种se
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="WebStorage" scheme="http://www.yatessss.com/tags/WebStorage/"/>
    
      <category term="页面储存" scheme="http://www.yatessss.com/tags/%E9%A1%B5%E9%9D%A2%E5%82%A8%E5%AD%98/"/>
    
  </entry>
  
  <entry>
    <title>《你不知道的JavaScript》读书笔记——this</title>
    <link href="http://www.yatessss.com/2016/03/31/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84JavaScript%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94this.html"/>
    <id>http://www.yatessss.com/2016/03/31/你不知道的JavaScript读书笔记——this.html</id>
    <published>2016-03-30T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;对this的误解&quot;&gt;&lt;a href=&quot;#对this的误解&quot; class=&quot;headerlink&quot; title=&quot;对this的误解&quot;&gt;&lt;/a&gt;对this的误解&lt;/h3&gt;&lt;p&gt;学习&lt;code&gt;this&lt;/code&gt;之前，应该知道两句话。&lt;/p&gt;
&lt;p&gt;首先要先消除对&lt;code&gt;this&lt;/code&gt;的误解，明白第一句话：&lt;strong&gt;&lt;em&gt;&lt;code&gt;this&lt;/code&gt;既不指向函数自身也不指向函数的词法作用域。&lt;/em&gt;&lt;/strong&gt;这句话很重要，现在看一下证明这句话的例子。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;既不指向函数自身&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看下面的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;num&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;string&quot;&gt;&quot;foo: &quot;&lt;/span&gt; + num );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 记录foo被调用的次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;( i &amp;gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        foo( i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo: 6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo: 7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo: 8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo: 9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// foo􏱦被调用了几次？&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( foo.count ); &lt;span class=&quot;comment&quot;&gt;// 0 -- WTF?&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在&lt;code&gt;foo.count = 0&lt;/code&gt;执行的时候，确实是向函数&lt;code&gt;foo&lt;/code&gt;添加了一个属性&lt;code&gt;count&lt;/code&gt;，但是&lt;code&gt;this.count&lt;/code&gt;中的&lt;code&gt;this&lt;/code&gt;并不是指向&lt;code&gt;foo&lt;/code&gt;函数本身。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;也不指向函数的词法作用域&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.bar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; foo(); &lt;span class=&quot;comment&quot;&gt;// ReferenceError: a is not defined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是觉得应该输出2？但是&lt;code&gt;this&lt;/code&gt;并不指向&lt;code&gt;foo&lt;/code&gt;的词法作用域，实际上&lt;code&gt;this&lt;/code&gt;在任何情况都不指向函数的词法作用域，使用&lt;code&gt;this&lt;/code&gt;不可能在词法作用域查询到什么。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;this指向什么&quot;&gt;&lt;a href=&quot;#this指向什么&quot; class=&quot;headerlink&quot; title=&quot;this指向什么&quot;&gt;&lt;/a&gt;this指向什么&lt;/h3&gt;&lt;p&gt;第二句重要的话：&lt;strong&gt;&lt;em&gt;this实际上是在函数被调用时发生的绑定，它指向什么全完取决于函数被调用的位置。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;它指向什么全完取决于函数被调用的位置。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先就是要找到函数被调用的位置，找位置要分析调用栈（执行当前函数的位置），我们要找的调用位置就是当前执行函数的前一个调用的位置。说着绕看代码就很明了了：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//当前的调用栈是：baz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//因此，当前的调用位置是全局作用域&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;baz&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bar(); &lt;span class=&quot;comment&quot;&gt;//&amp;lt;--bar的调用位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//当前的调用栈是：baz -&amp;gt; bar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//因此，当前的调用位置在baz中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;bar&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo(); &lt;span class=&quot;comment&quot;&gt;//&amp;lt;--foo的调用位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//当前的调用栈是：baz -&amp;gt; bar -&amp;gt;foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//因此，当前的调用位置在bar中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;foo&#39;&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baz(); &lt;span class=&quot;comment&quot;&gt;//&amp;lt;--baz的调用位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;看完这个应该就会明白了，this指向的位置，就是在调用的位置。如果&lt;code&gt;this&lt;/code&gt;在&lt;code&gt;foo&lt;/code&gt;函数中，&lt;code&gt;foo&lt;/code&gt;函数的调用位置是&lt;code&gt;bar&lt;/code&gt;，那&lt;code&gt;foo&lt;/code&gt;函数中的&lt;code&gt;this&lt;/code&gt;就指向&lt;code&gt;bar&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;this实际上是在函数被调用时发生的绑定&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;找到了指向的位置，就要找this绑定在哪个对象上。&lt;code&gt;this&lt;/code&gt;绑定会有四条规则，每一条的优先级是不同的。&lt;/p&gt;
&lt;p&gt;四条规则分别是：默认绑定、隐式绑定、显式绑定、new绑定。&lt;/p&gt;
&lt;p&gt;优先级是这样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;是否在new中调用？如果是，this就绑定的是新创建的对象。&lt;/li&gt;
&lt;li&gt;是否通过call、apply、bind调用（显式绑定）？如果是，this绑定的就是指定的对象。&lt;/li&gt;
&lt;li&gt;是否在某个上下文对象中调用（隐式绑定）？如果是，this绑定的是那个上下文对象。&lt;/li&gt;
&lt;li&gt;都不是的话，就是默认绑定。在严格模式下绑定到&lt;code&gt;undefined&lt;/code&gt;，否则就是全局对象上。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面介绍四中绑定：&lt;/p&gt;
&lt;h4 id=&quot;默认绑定&quot;&gt;&lt;a href=&quot;#默认绑定&quot; class=&quot;headerlink&quot; title=&quot;默认绑定&quot;&gt;&lt;/a&gt;默认绑定&lt;/h4&gt;&lt;p&gt;看下面这个代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo(); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们应该已经知道了，这个里的&lt;code&gt;this&lt;/code&gt;会指向全局作用域。但原因是什么？是因为&lt;code&gt;foo()&lt;/code&gt;是直接使用，没有在别的函数或对象内部被调用，所以就是默认绑定，默认绑定的&lt;code&gt;this&lt;/code&gt;就会指向全局作用域。&lt;/p&gt;
&lt;p&gt;但是如果在严格模式中，全局对象无法使用默认绑定，&lt;code&gt;this&lt;/code&gt;就会绑定到&lt;code&gt;undefined&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    &quot;use strict&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo(); &lt;span class=&quot;comment&quot;&gt;// TypeError: this is undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;隐式绑定&quot;&gt;&lt;a href=&quot;#隐式绑定&quot; class=&quot;headerlink&quot; title=&quot;隐式绑定&quot;&gt;&lt;/a&gt;隐式绑定&lt;/h4&gt;&lt;p&gt;如果&lt;code&gt;this&lt;/code&gt;所在的函数被某个对象拥有或者包含，函数在运行时就会有这个对象的上下文，隐式绑定规则就会把函数中的&lt;code&gt;this&lt;/code&gt;（隐式）绑定到这个上下文对象上。如果是一个链式调用呢，就只会关心最后一次调用时的上下文。&lt;/p&gt;
&lt;p&gt;看下面代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj2 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: foo &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj1 = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj2: obj2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;obj1.obj2.foo(); &lt;span class=&quot;comment&quot;&gt;// 42&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;像这样的链式调用呢，&lt;code&gt;this&lt;/code&gt;最后在&lt;code&gt;obj2&lt;/code&gt;中被引用，所以&lt;code&gt;this.a&lt;/code&gt;其实就是&lt;code&gt;obj2.a&lt;/code&gt;，就是42。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;隐式丢失&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: foo &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = obj.foo; &lt;span class=&quot;comment&quot;&gt;// 􏰃􏰄函数别名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&quot;oops, global&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//a是全局对象的属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;bar(); &lt;span class=&quot;comment&quot;&gt;// &quot;oops, global&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为&lt;code&gt;bar()&lt;/code&gt;是一个不带任何修饰的函数调用，所以应用了默认绑定。&lt;/p&gt;
&lt;p&gt;还有一个更常见的问题，在传入回调函数的时候：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doFoo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;// fn是参数，其实引用的是foo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     fn(); &lt;span class=&quot;comment&quot;&gt;// &amp;lt;-- 调用位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     a: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo: foo &amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&quot;oops, global&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// a是全局对象属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;doFoo( obj.foo ); &lt;span class=&quot;comment&quot;&gt;// &quot;oops, global&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数传递其实就是一种隐式赋值，所以我们传入的函数时也会被隐式赋值，隐式赋值会在全局作用域创建一个变量，所以结果就和上个例子一样。&lt;/p&gt;
&lt;p&gt;语言的一些内置函数的本质其实也是传递参数，所以也会隐式赋值，就是出现绑定的丢失。&lt;/p&gt;
&lt;p&gt;比如&lt;code&gt;setTimeout&lt;/code&gt;函数：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    foo: foo &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;string&quot;&gt;&quot;oops, global&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// a是全局对象属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setTimeout( obj.foo, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ); &lt;span class=&quot;comment&quot;&gt;// &quot;oops, global&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;JavaScript内部&lt;code&gt;setTimeout&lt;/code&gt;的实现，会传递参数：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//类似实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setTimeout&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn,delay&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fn(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;显式绑定&quot;&gt;&lt;a href=&quot;#显式绑定&quot; class=&quot;headerlink&quot; title=&quot;显式绑定&quot;&gt;&lt;/a&gt;显式绑定&lt;/h4&gt;&lt;p&gt;JavaScript提供了&lt;code&gt;call()&lt;/code&gt;和&lt;code&gt;apply()&lt;/code&gt;方法，可以直接指定this的绑定对象，称之为显式绑定。就像下面这样：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.call( obj ); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样通过&lt;code&gt;foo.call()&lt;/code&gt;，可以把&lt;code&gt;this&lt;/code&gt;绑定到&lt;code&gt;obj&lt;/code&gt;上面。&lt;/p&gt;
&lt;p&gt;如果在&lt;code&gt;call()&lt;/code&gt;中传入一个基本类型来当做&lt;code&gt;this&lt;/code&gt;的绑定对象，那基本类型会调用基本包装类，把它变成对象的形式。&lt;/p&gt;
&lt;p&gt;但显示绑定还是不能解决绑定丢失的问题，显式绑定的一个变种可以解决这个问题。办法就是在显式绑定的外面再加一个包裹函数，负责接收参数并返回值，这种方法叫&lt;strong&gt;&lt;em&gt;硬绑定&lt;/em&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;下面是例子：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;something&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a, something );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a + something;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; foo.apply( obj, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = bar( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ); &lt;span class=&quot;comment&quot;&gt;// 2 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( b ); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ES5提供了一个内置的硬绑定的方法：&lt;code&gt;bind()&lt;/code&gt;，用法如下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;something&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a, something );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a + something;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = foo.bind( obj );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; b = bar( &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; ); &lt;span class=&quot;comment&quot;&gt;// 2 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( b ); &lt;span class=&quot;comment&quot;&gt;// 5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;new绑定&quot;&gt;&lt;a href=&quot;#new绑定&quot; class=&quot;headerlink&quot; title=&quot;new绑定&quot;&gt;&lt;/a&gt;new绑定&lt;/h4&gt;&lt;p&gt;使用new来构造函数调用，会发生new绑定。会自动执行下面的操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个全新的对象。&lt;/li&gt;
&lt;li&gt;这个新对象会被执行[[Prototype]]连接。&lt;/li&gt;
&lt;li&gt;这个新对象会绑定到函数调用的this。&lt;/li&gt;
&lt;li&gt;如果函数没有返回其他对象，那么new表达式中的函数调用会自动返回这个新对象。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;a&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.a = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bar = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; foo(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( bar.a ); &lt;span class=&quot;comment&quot;&gt;// 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;this&lt;/code&gt;的内容大概就这么多，关于这本书对象和原型这部分，书上讲了很多理论知识，并且知识点很多很杂，我的理解也不是很深刻，总结无非是把书上东西搬上来而已，不如换一个方式。慕课网上Bosn老师有一系列课程对对象原型有了很好的解释，不妨去看一下。&lt;a href=&quot;http://www.imooc.com/learn/277&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;链接在这里&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;对this的误解&quot;&gt;&lt;a href=&quot;#对this的误解&quot; class=&quot;headerlink&quot; title=&quot;对this的误解&quot;&gt;&lt;/a&gt;对this的误解&lt;/h3&gt;&lt;p&gt;学习&lt;code&gt;this&lt;/code&gt;之前，应该知道两句话。&lt;/p&gt;
&lt;p&gt;首先要先消除对&lt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.yatessss.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://www.yatessss.com/tags/JavaScript/"/>
    
      <category term="this" scheme="http://www.yatessss.com/tags/this/"/>
    
  </entry>
  
  <entry>
    <title>微信JSSDK坑啊坑</title>
    <link href="http://www.yatessss.com/2016/03/30/%E5%BE%AE%E4%BF%A1JSSDK%E5%9D%91%E5%95%8A%E5%9D%91.html"/>
    <id>http://www.yatessss.com/2016/03/30/微信JSSDK坑啊坑.html</id>
    <published>2016-03-29T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;update：&quot;&gt;&lt;a href=&quot;#update：&quot; class=&quot;headerlink&quot; title=&quot;update：&quot;&gt;&lt;/a&gt;update：&lt;/h3&gt;&lt;p&gt;今天又提了一个bug：就是这个页面分享之后，点击分享的链接不能获取到地理位置。&lt;/p&gt;
&lt;p&gt;于是我首先看了一下，这个问题是不是可以复现，在我的手机上也确实是复现了，那说明这确实是一个bug。&lt;/p&gt;
&lt;p&gt;然后我把分享后的这个地址复制了出来，在微信web开发者工具中打开查看，发现是JSSDK注册失败，报错：&lt;code&gt;config:invalid signature&lt;/code&gt;，所以手机不能调微信获取地理位置的接口。&lt;/p&gt;
&lt;p&gt;查看了一下，是微信分享后会在本来的url后面带两个参数&lt;code&gt;?from=groupmessage&amp;amp;isappinstalled=0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;注册微信JSSDK是这样一个流程，前端首先先去访问公司的一个后台接口带一个?url=’’的参数，后台会根据我的参数去访问微信提供的接口，拿到timestamp，nonceStr，signature等参数并发送给前端，前端再去注册。&lt;/p&gt;
&lt;p&gt;所以我认为可能是因为我请求后台接口时的url直接是取得是&lt;code&gt;location.href&lt;/code&gt;，带了微信分享后的那两个参数，所以后台处理的时候出现了错误，造成注册JSSDK时的签名无效。所以我把&lt;code&gt;location.href&lt;/code&gt;改成了&lt;code&gt;location.origin + location.pathname&lt;/code&gt;这样就把&lt;code&gt;？号&lt;/code&gt;后的参数都去掉了，我想这样应该就保持了分享前后url的一致性，不会影响JSSDK的注册吧。结果其实没有效果。&lt;/p&gt;
&lt;p&gt;然后，又想我保持了url参数的一致性都没有作用，那是不是后台在处理的时候并不是取的我后面的这个参数，而是从请求头中拿了&lt;code&gt;referer&lt;/code&gt;这个属性呢？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注：&lt;code&gt;referer&lt;/code&gt;是请求头当中的一个字段，它可以告诉服务器我是从哪个url过来的。这个字段一般是用来防止盗链外链用的。有兴趣的同学可以搜索一下，我也是搜索得来的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是后台同学说他拿的就是我url后面的参数。&lt;/p&gt;
&lt;p&gt;那问题到底在哪里呢？其实很蠢因为我url没有进行encodeURI编码，所以造成了错误，所以以后一定要记得向后台传递url的时候&lt;strong&gt;一定要进行encodeURI编码！！！一定要进行encodeURI编码！！！一定要进行encodeURI编码！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;虽说绕了一些弯路，但是也了解了一些原来没涉及到的知识，比如&lt;code&gt;location&lt;/code&gt;中的一些方法（改天单独学习总结下），请求头当中的一些字段（也要系统的学习一下）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最近一段时间的工作不是很忙，给一个微信的项目加一些需求，主要就是通过微信JSSDK的获取地理位置的接口，拿到经纬度，完成一些功能。&lt;/p&gt;
&lt;p&gt;主要遇到了三个以后需要注意的地方吧，这里先描述一下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;微信中AppId的作用。&lt;/li&gt;
&lt;li&gt;微信禁止不安全的https链接。&lt;/li&gt;
&lt;li&gt;跨域携带cookie&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;微信中AppId的作用&quot;&gt;&lt;a href=&quot;#微信中AppId的作用&quot; class=&quot;headerlink&quot; title=&quot;微信中AppId的作用&quot;&gt;&lt;/a&gt;微信中AppId的作用&lt;/h3&gt;&lt;p&gt;大家知道，开发手机页面的时候，调试时意见很麻烦的事情。因为在移动端你并不能想浏览器一样打开开发者工具，当报一些错误的时候，手机是无法查看的，所以一般我们就是在chrome的开发者工具中来模拟手机，比如屏幕大小、触摸事件等等。如果是一般的移动端页面，这样调试是可以的，但是如果JS中回去调&lt;code&gt;open.weixin.qq&lt;/code&gt;授权登录的接口的话，在浏览器模拟的时候，就会显示&lt;code&gt;请在微信中打开&lt;/code&gt;类似的字样。&lt;/p&gt;
&lt;p&gt;所以我们如果是开发微信中页面的时候，一般会有两种办法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先把&lt;code&gt;open.weixin.qq&lt;/code&gt;授权登录的接口去掉，这样可以跳过微信验证的步骤，现在本地来开发页面。&lt;/li&gt;
&lt;li&gt;通过使用微信官方的&lt;strong&gt;微信web开发者工具&lt;/strong&gt;来开发页面。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实两种方法是配合来使用的，在页面功能还没有做完的时候，我们可以在本地的浏览器中先开发功能，因为浏览器中有一些插件可以来跨域，携带cookie等等方便开发，但是在浏览器中并不能调用JSSDK的方法。功能开发完毕要跑通整个流程的时候，就可以在web开发者工具中调试，因为web开发者工具中可以调用微信的JSSDK的方法和授权登录等等，但是在web开发者工具中只能运行公众号后台绑定的安全域名下的页面，所以需要我们上到测试环境下去跑。&lt;/p&gt;
&lt;p&gt;而我遇到的第一个问题就是：在公众号后台已经添加了我为开发者，但是我在web开发者工具中还是无法打开后台绑定的安全域名下的页面。起初我还以为是不是公众号没有绑定这个域名呢？导致我无法打开页面，后来到公众号后台查看并不是这样，经过排查是因为，后台接口用的appid和公众号的appid不匹配造成的。那appid的作用是什么呢？&lt;/p&gt;
&lt;p&gt;appid其实就是起到一个标识的作用，有了appid微信就会知道你是哪一个公众账号，知道了是哪一个公众号，他就会在后台查看你这个公众号下有哪些安全域名，公众号开通了哪些功能，有哪些权限以及一系列的信息。&lt;/p&gt;
&lt;p&gt;比如：如果你打开的网址和你发出的appid对应的公众号绑定的安全域名不匹配时，微信会禁止你去打开这个链接；如果你要调试页面，微信会到后台去找你所用的微信号是不是在appid对应的公众号下的开发者名单中有没有你，如果没有微信也会禁止你去调试这个页面；公众号后台也会有很多功能，微信通过appid也能来查询你有没有开通这个功能。&lt;/p&gt;
&lt;p&gt;所以，因为后台接口用的是另一个appid，微信认为开打的是另一个公众号的页面，而这个公众号的开发者名单中并没有我，所以我没有办法去调试。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;微信禁止不安全的https链接&quot;&gt;&lt;a href=&quot;#微信禁止不安全的https链接&quot; class=&quot;headerlink&quot; title=&quot;微信禁止不安全的https链接&quot;&gt;&lt;/a&gt;微信禁止不安全的https链接&lt;/h3&gt;&lt;p&gt;经过第一个问题之后，我可以在web开发者工具中调试我的页面了，我又遇到了另一个奇怪的问题：我在开发者工具中整个页面功能没有问题，但是在微信当中打开，就会出现错误。当时，特别困惑因为在开发者工具中并没有报任何错误，而在微信中你无法看到错误信息，所以到底是哪个位置出现了错误你也不清楚。&lt;/p&gt;
&lt;p&gt;经过了上网查询，自己排查，知道了原因是这样的。&lt;/p&gt;
&lt;p&gt;因为后台接口走的是https，后台的https证书只对应线上的那个域名，而在测试环境中因为接口域名和证书并不对应，所以微信认为这个链接是不安全的，而微信会禁止不安全的https链接。而在web开发者工具中是可以访问这样不安全的https的连接的，所以就会出现上述的问题。&lt;/p&gt;
&lt;p&gt;所以，在今后遇到这样web开发者工具和微信行为不一致的时候，我们可以先查看一下是不是我们有https的接口是不安全的。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;withCredentials跨域请求&quot;&gt;&lt;a href=&quot;#withCredentials跨域请求&quot; class=&quot;headerlink&quot; title=&quot;withCredentials跨域请求&quot;&gt;&lt;/a&gt;withCredentials跨域请求&lt;/h3&gt;&lt;p&gt;我们首先应该知道这个知识：默认情况下，ajxa跨域请求是不会发送用户认证凭据的（cookie、HTTP认证及客户端SSL证明等）。&lt;/p&gt;
&lt;p&gt;有什么方法可以解决这个问题呢？可以通过设置ajax的&lt;code&gt;withCredentials&lt;/code&gt;属性为&lt;code&gt;true&lt;/code&gt;来指定某个请求是可以发送用户认证凭据。不过要注意：支持withCredentials属性的浏览器有Firefox 3.5+、Safari 4+和Chrome。IE10及更早版本都不支持。&lt;/p&gt;
&lt;p&gt;如果设置这个属性的话，请求头中就会带上cookie，而后台要接受这个凭据的话，在服务端的响应头必须添加&lt;code&gt;Access-Control-Allow-Credentials: true&lt;/code&gt;，并且&lt;strong&gt;服务端需指定一个域名（Access-Control-Allow-Origin:www.xxxxxx.com），而不能使用泛型（Access-Control-Allow-Origin: * ）&lt;/strong&gt;这样我们就可以跨域发送cookie了。&lt;/p&gt;
&lt;p&gt;如果是原生的话大概是这样：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;http://www.xxx.com/api&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.withCredentials = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.onload = onLoadHandler;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;xhr.send();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果使用类库的话（如zepto）：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	type: &lt;span class=&quot;string&quot;&gt;&#39;get&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	data:  data,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	xhrFields: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   		withCredentials: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 	&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;zepto&lt;/code&gt;的&lt;code&gt;ajax&lt;/code&gt;中有这样一个参数：&lt;code&gt;xhrFields&lt;/code&gt; (默认： none): 一个对象包含的属性被逐字复制到XMLHttpRequest的实例。&lt;/p&gt;
&lt;p&gt;大概就是这么多吧，如果想起来在添加。&lt;/p&gt;
&lt;p&gt;最后在吐槽一下吧，生活不如意之事十之八九&lt;/p&gt;
&lt;p&gt;总感觉生活总在你比较满意的时候给你一记当头棒喝，本来最近还活的好好的，经过几个月的努力学习算是顺利的转行，也在一直学习成长，对自己最近的表现也比较满意。而上帝可能觉得你近一阶段有些骄傲和浮躁了，需要给你提醒一下，所以最近遇到了一个小挫折，也让自己知道了一些不足，就像盖楼，基础往往决定你能不能盖一座高楼，而技术决定你能盖多高，基础确实是一个必要条件，而我现在就处在半瓶水响叮当的阶段，对一些基础只是知其然不知其所以然，往往会用、知道，但是没有深究原理。这就对出现的一些问题在解决起来，可能会毫无头绪，依靠网络未尝不是一个办法，但往往不是最好的办法，如果了解原理你可能对出现问题的原因追根溯源，但是你如果只找到这个问题的解决办法，下次出现因为这个原理出现的其他问题你依然会没有头绪。&lt;/p&gt;
&lt;p&gt;再有，听清问题，想好之后再去回答，说的每句话应该是绝对经过思考的  尤其在不熟悉的人之间。&lt;/p&gt;
&lt;p&gt;小品里说过嘛，车轱辘往前转，人要往前看，夯实基础，拥抱新技术，是我未来一年的目标，不卑不亢，不喜不悲，希望下次再战。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;update：&quot;&gt;&lt;a href=&quot;#update：&quot; class=&quot;headerlink&quot; title=&quot;update：&quot;&gt;&lt;/a&gt;update：&lt;/h3&gt;&lt;p&gt;今天又提了一个bug：就是这个页面分享之后，点击分享的链接不能获取到地理位置。&lt;/p&gt;
&lt;p&gt;于是我
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="微信JSSDK" scheme="http://www.yatessss.com/tags/%E5%BE%AE%E4%BF%A1JSSDK/"/>
    
      <category term="跨域" scheme="http://www.yatessss.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
      <category term="appid" scheme="http://www.yatessss.com/tags/appid/"/>
    
      <category term="referer" scheme="http://www.yatessss.com/tags/referer/"/>
    
  </entry>
  
  <entry>
    <title>《你不知道的JavaScript》读书笔记——闭包</title>
    <link href="http://www.yatessss.com/2016/03/29/%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84JavaScript%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E9%97%AD%E5%8C%85.html"/>
    <id>http://www.yatessss.com/2016/03/29/你不知道的JavaScript读书笔记——闭包.html</id>
    <published>2016-03-28T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;理解闭包&quot;&gt;&lt;a href=&quot;#理解闭包&quot; class=&quot;headerlink&quot; title=&quot;理解闭包&quot;&gt;&lt;/a&gt;理解闭包&lt;/h3&gt;&lt;p&gt;闭包是什么，怎么理解？&lt;/p&gt;
&lt;p&gt;闭包就是一个作用域的外部变量保持着对这个作用域的引用，这个引用就叫做闭包。&lt;/p&gt;
&lt;p&gt;这么讲有些晦涩，看这个代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( a );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bar; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; baz = foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;baz(); &lt;span class=&quot;comment&quot;&gt;// 2 这就是闭包&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为&lt;code&gt;baz&lt;/code&gt;本身是&lt;code&gt;foo&lt;/code&gt;作用域之外的变量，根据作用域的规则，&lt;code&gt;baz&lt;/code&gt;本身是不可以访问到&lt;code&gt;foo&lt;/code&gt;作用域内的变量的。&lt;/p&gt;
&lt;p&gt;本来在通常的情况下，在函数执行完后，如果函数在后面不再使用的时候，会进行垃圾回收机制，把&lt;code&gt;foo&lt;/code&gt;函数内的作用域销毁，把不再使用到的内存释放掉。&lt;/p&gt;
&lt;p&gt;但是正因为闭包，这个作用域没有被销毁。原因是&lt;code&gt;foo()&lt;/code&gt;函数执行之后的返回值&lt;code&gt;bar&lt;/code&gt;，就是&lt;code&gt;bar&lt;/code&gt;内部的函数即&lt;code&gt;function bar(){console.log( a );}&lt;/code&gt;，把这个赋值给了&lt;code&gt;baz&lt;/code&gt;，&lt;code&gt;baz&lt;/code&gt;在被调用时（&lt;code&gt;baz()&lt;/code&gt;）因为&lt;code&gt;baz&lt;/code&gt;中用到了变量&lt;code&gt;a&lt;/code&gt;，而变量&lt;code&gt;a&lt;/code&gt;是在&lt;code&gt;foo&lt;/code&gt;的作用域中，所以&lt;code&gt;baz&lt;/code&gt;必须得拥有&lt;code&gt;foo&lt;/code&gt;函数的作用域闭包才能够正常运行，所以&lt;code&gt;foo&lt;/code&gt;的作用域不会被销毁会一直存在，以便&lt;code&gt;baz&lt;/code&gt;之后调用的时候能正常运行。&lt;/p&gt;
&lt;p&gt;这么说还是很绕，简单讲就是&lt;code&gt;foo&lt;/code&gt;函数外面的变量&lt;code&gt;baz&lt;/code&gt;要用到&lt;code&gt;foo&lt;/code&gt;作用域里面的东西，这就叫&lt;code&gt;baz&lt;/code&gt;拥有&lt;code&gt;foo&lt;/code&gt;的闭包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;再简单讲就是函数调函数。（一个同事说的，一想好像有一些道理）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;在定时器、时间监听器、Ajax请求、跨窗口通信、或者任何其他的异步（或者同步）任务中，只要是用了回调函数，实际上就是在使用闭包。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;循环和闭包&quot;&gt;&lt;a href=&quot;#循环和闭包&quot; class=&quot;headerlink&quot; title=&quot;循环和闭包&quot;&gt;&lt;/a&gt;循环和闭包&lt;/h3&gt;&lt;p&gt;看一个循环的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     setTimeout( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;, i*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本来这段代码的预期是，分别输出1~5，每秒一次，每次一个。但是实际上他会每秒一个的频率输出五次6。&lt;/p&gt;
&lt;p&gt;造成这样的原因，书上讲的是循环中的五个函数是在各个迭代中分别定义的，但是他们都被封闭在一个共享的全局作用域当中，实际只有一个&lt;code&gt;i&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;解决办法是运用IIFE，并在每次循环中的IIFE内保存&lt;code&gt;i&lt;/code&gt;的值。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; j = i;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         setTimeout( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( j );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;, j*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;)(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再改进一下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;j&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         setTimeout( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( j );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;#125;, j*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;)( i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果运用ES6就会更加简单，只要运用&lt;code&gt;let&lt;/code&gt;声明的块作用域：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;=&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     setTimeout( &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;timer&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( i );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;, i*&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;模块&quot;&gt;&lt;a href=&quot;#模块&quot; class=&quot;headerlink&quot; title=&quot;模块&quot;&gt;&lt;/a&gt;模块&lt;/h3&gt;&lt;p&gt;模块也是利用闭包来实现的。&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CoolModule&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; something = &lt;span class=&quot;string&quot;&gt;&quot;cool&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; another = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( something );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doAnother&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( another.join( &lt;span class=&quot;string&quot;&gt;&quot; ! &quot;&lt;/span&gt; ) );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doSomething: doSomething,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         doAnother: doAnother&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo = CoolModule();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.doSomething(); &lt;span class=&quot;comment&quot;&gt;// cool&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foo.doAnother(); &lt;span class=&quot;comment&quot;&gt;// 1 ! 2 ! 3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样的模式就是最常见的模块的实现方法。返回值是一个包含内部的函数的对象。因为&lt;code&gt;CoolModule()&lt;/code&gt;是一个函数，必须调用这个外部的函数后才能创建一个包含内部作用域的闭包。并且返回对象含有的是内部函数而不是内部变量的引用，内部变量是隐藏且私有的状态。&lt;/p&gt;
&lt;p&gt;模块也是函数，也可以接受参数：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CoolModule&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;id&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;identify&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log( id );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         identify: identify&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo1 = CoolModule( &lt;span class=&quot;string&quot;&gt;&quot;foo 1&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; foo2 = CoolModule( &lt;span class=&quot;string&quot;&gt;&quot;foo 2&quot;&lt;/span&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; foo1.identify(); &lt;span class=&quot;comment&quot;&gt;// &quot;foo 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; foo2.identify(); &lt;span class=&quot;comment&quot;&gt;// &quot;foo 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ES6为模块添加了语法的支持，ES6可以把文件当做模块来加载，但是要注意ES6的模块没有行内格式，就是每个模块必须在一个单独的文件中。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bar.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hello&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;who&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Let me introduce: &quot;&lt;/span&gt; + who;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; hello;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;foo.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//仅从bar模块导入hello()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; hello &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hungry = &lt;span class=&quot;string&quot;&gt;&quot;hippo&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;awesome&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         hello( hungry ).toUpperCase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; awesome;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;baz.js&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//导入完整的foo和bar模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt; foo &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;module&lt;/span&gt; bar &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     bar.hello( &lt;span class=&quot;string&quot;&gt;&quot;rhino&quot;&lt;/span&gt; )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ); &lt;span class=&quot;comment&quot;&gt;// Let me introduce: rhino&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; foo.awesome(); &lt;span class=&quot;comment&quot;&gt;// LET ME INTRODUCE: HIPPO&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;import&lt;/code&gt;可以将一个模块中的一个或多个API引入到当前作用域，并分别绑定在一个变量上。&lt;code&gt;module&lt;/code&gt;会将整个模块的API引入并绑定到一个变量上。&lt;code&gt;export&lt;/code&gt;会将当前模块的变量或函数导出为公共的API。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;理解闭包&quot;&gt;&lt;a href=&quot;#理解闭包&quot; class=&quot;headerlink&quot; title=&quot;理解闭包&quot;&gt;&lt;/a&gt;理解闭包&lt;/h3&gt;&lt;p&gt;闭包是什么，怎么理解？&lt;/p&gt;
&lt;p&gt;闭包就是一个作用域的外部变量保持着对这个作用域的引用，这个引用就叫做闭包。&lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.yatessss.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://www.yatessss.com/tags/JavaScript/"/>
    
      <category term="闭包" scheme="http://www.yatessss.com/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透—外网可以访问到本地页面</title>
    <link href="http://www.yatessss.com/2016/03/29/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E2%80%94%E5%A4%96%E7%BD%91%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE%E5%88%B0%E6%9C%AC%E5%9C%B0%E9%A1%B5%E9%9D%A2.html"/>
    <id>http://www.yatessss.com/2016/03/29/内网穿透—外网可以访问到本地页面.html</id>
    <published>2016-03-28T16:00:00.000Z</published>
    <updated>2017-01-03T03:29:55.000Z</updated>
    
    <content type="html">&lt;p&gt;今天在解决跨域问的时候，误打误撞解决了一个原来困扰我的问题。&lt;/p&gt;
&lt;p&gt;很多时候会有这样的问题，想要把本地的页面发送给别人看，不可能一个demo页面都去部署到线上去，那该怎么办？&lt;/p&gt;
&lt;p&gt;如果是内网问题还好解决，如果用的是webstorm的话，webstorm本身就可以自己在本地起一个服务。在webstorm的偏好设置里面，有一个&lt;code&gt;debugger&lt;/code&gt;选项，只要把&lt;code&gt;Built-in server&lt;/code&gt;这个选项勾选，webstorm会自己启动一个服务，只要把网址的&lt;code&gt;localhost&lt;/code&gt;改成自己机器的ip地址，只要机器是在同一个网内，就可以访问到本地的页面了。&lt;/p&gt;
&lt;p&gt;还有一种方式是，利用node在本地起一个服务，方法是安装一个npm包&lt;code&gt;http-server&lt;/code&gt;，运行&lt;code&gt;npm install http-server -g&lt;/code&gt;，安装完成之后直接输入命令&lt;code&gt;$ http-server&lt;/code&gt;，他就会在本地的8080端口去起一个服务，本地所有的文件就都可以访问到了，只要在起的服务的地址后面再加上文件的路径就可以了。&lt;/p&gt;
&lt;p&gt;如果是外网呢？我在知乎上看到了一个答案，(&lt;a href=&quot;https://www.zhihu.com/question/25456655&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;)。&lt;/p&gt;
&lt;p&gt;具体做法是这样的，我们需要一个工具&lt;code&gt;ngrok&lt;/code&gt;，但是好像这个已经被墙了，国内有很多替代的工具，可以自行搜索一下，这里我找到两个：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://natapp.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;natapp.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ngrok.cc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sunny-Ngrok&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;具体的使用方法也很简单，以natapp来举例。只要下载相应操作系统的客户端，然后把它解压，cd进入到解压后的目录中，运行命令&lt;code&gt;./ngrok -config ngrok.cfg -subdomain myapp 80&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这里需要注意&lt;code&gt;myapp&lt;/code&gt;这个是你要自己定义的域名，80是你要映射到本地的端口，然后访问&lt;code&gt;http://myapp.ngrok.natapp.cn&lt;/code&gt;就可以和本地联通了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;现在其实只要配合node在本地起的服务就可以完成外网访问本地页面了，使用&lt;code&gt;http-server&lt;/code&gt;起一个本地的服务是8080端口，所以我只需要把&lt;code&gt;ngrok&lt;/code&gt;映射到8080端口就可以了，即运行指令&lt;code&gt;./ngrok -config ngrok.cfg -subdomain myapp 8080&lt;/code&gt;，这样再访问自定义的域名之后，就可以顺利访问到本地了。&lt;/p&gt;
&lt;p&gt;最后，很多选项都可以在&lt;code&gt;ngrok.cfg&lt;/code&gt;这个文件里修改，并且&lt;code&gt;ngrok&lt;/code&gt;的用途不仅仅简单地是这一个，他还有很多用途，有兴趣的具体可以去网上了解一下，因为我对&lt;code&gt;ngrok&lt;/code&gt;的了解也不是很多。&lt;/p&gt;
&lt;p&gt;在解决这个问题之后，我本地的页面已经可以跑在微信里了，再配合我原来记录的&lt;a href=&quot;http://www.yatessss.com/2016/01/26/Charles%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/&quot;&gt;手机调试本地页面的跨域问题&lt;/a&gt;，就可以解决接口跨域的问题了，不过这个解决办法挺笨的，更好的解决办法我还在找，但是还没有找到。&lt;/p&gt;
&lt;p&gt;最好还是和后台沟通可以把测试服务器的接口改成所有域名都能够访问，这样还是最方便的。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天在解决跨域问的时候，误打误撞解决了一个原来困扰我的问题。&lt;/p&gt;
&lt;p&gt;很多时候会有这样的问题，想要把本地的页面发送给别人看，不可能一个demo页面都去部署到线上去，那该怎么办？&lt;/p&gt;
&lt;p&gt;如果是内网问题还好解决，如果用的是webstorm的话，webstorm本身
    
    </summary>
    
      <category term="工作总结" scheme="http://www.yatessss.com/categories/%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="ngrok" scheme="http://www.yatessss.com/tags/ngrok/"/>
    
      <category term="内网穿透" scheme="http://www.yatessss.com/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
</feed>
